=begin
hcv_algorithm.rb
Copyright (c) 2007-2023 University of British Columbia

HCV Interpretation algorithm.  Most of the rules were obtained from the paper
HEP-14-2472-R2, with a few modifications done by Richard Harrigan.

IMPORTANT:  MAKE SURE YOU DROP EACH VERSION INTO f:/resist/ruby/ckwlib/hcv_algs/ AND RUN update_all.rb
=end

require 'ckwlib/sequence'

#Need to be able to analyze NS3, NS5A, NS5B
class HCVAlgorithm

  def HCVAlgorithm.drugs
    return @@drugs
  end
  def HCVAlgorithm.res_hash
    return @@res_hash
  end
  def HCVAlgorithm.genotypes
    return @@genotypes
  end
  def HCVAlgorithm.standards
    return @@standards
  end
  def HCVAlgorithm.references
    return @@references
  end
  def HCVAlgorithm.version
    return @@version
  end
  def HCVAlgorithm.date
    return @@date
  end

  #Returns true if this is potentially a mutation spot.
  def HCVAlgorithm.is_mut_loc?(loc, region)
    @@rules.each do |rule|
      return true if(rule[4] == loc and rule[0] == region)
    end
    return false
  end

  @@version = 'cfe-hcv 1.4'
  @@date = '24-Feb-2016'

  @@res_hash = {
    1 => ['Likely Susceptible', :green],
    2 => ['Not Indicated', :black],
    3 => ['Mutations Detected; Effect Unknown', :orange],
    4 => ['Resistance Possible', :orange],
    5 => ['Resistance Likely', :red],
    6 => ['Resistance Likely', :red], #Possibly more resistant?  #We should get rid of this.
  }

  #Technically there is  2a, 2b, 2c & 2d, 3a, 3b, 3c, 3d, 3e & 3f, 4a, 4b, 4c, 4d, 4e, 4f, 4g, 4h, 4i & 4j.  Probably 5 as well?
  #@@genotypes = ['1A','1B','2A','2B','3A','4','6A']
  @@genotypes = ['1A','1B','2A','3','4','6A']
  @@aminos = 'ACDEFGHKMNPQRSTVWYIVXi'.split('')
  @@tm = ['e284a2'].pack('H*')

  @@references = ["Lontok et al., \"Hepatitis C virus drug resistance-associated substitutions: State of the art summary\", Hepatology, July 2015.",
  "Hernandez et al. (2013) J. Clin Virol 57;13-18",
  "Krishnan et al. (2015) AAC 59:979-987", ]

  @@drugs = [
    {:class => 'NS3', :code => 'BPV', :name => 'Boceprevir', :label => "Boceprevir (Victrelis#{@@tm})"},
    {:class => 'NS3', :code => 'TPV', :name => 'Telaprevir', :label => "Telaprevir (Incivek#{@@tm})"},
    {:class => 'NS3', :code => 'SPV', :name => 'Simeprevir', :label => "Simeprevir (Galexos#{@@tm})"},
    {:class => 'NS3', :code => 'PTV', :name => 'Paritaprevir', :label => "Paritaprevir (a component of Holkira Pak#{@@tm})"},
    {:class => 'NS3', :code => 'GZR', :name => 'Grazoprevir', :label => "Grazoprevir (a component of Zepatier#{@@tm})"},

    {:class => 'NS5A', :code => 'DCV', :name => 'Daclatasvir', :label => "Daclatasvir (Daklinza#{@@tm})"},
    {:class => 'NS5A', :code => 'LDV', :name => 'Ledipasvir', :label => "Ledipasvir (a component of Harvoni#{@@tm})"},
    {:class => 'NS5A', :code => 'EBV', :name => 'Elbasvir', :label => "Elbasvir (a component of Zepatier#{@@tm})"},
    {:class => 'NS5A', :code => 'OBV', :name => 'Ombitasvir', :label => "Ombitasvir (a component of Holkira Pak#{@@tm})"},

    {:class => 'NS5B', :code => 'SOF', :name => 'Sofosbuvir', :label => "Sofosbuvir (also a component of Harvoni#{@@tm})"},
    {:class => 'NS5B', :code => 'DSV', :name => 'Dasabuvir', :label => "Dasabuvir (a component of Holkira Pak#{@@tm})"},

  ]

  @@standards = {
    ['NS3','1A'] => "GCGCCCATCACGGCGTACGCCCAGCAGACAAGGGGCCTCCTAGGGTGCATAATCACCAGCCTGACTGGCCGGGACAAAAACCAAGTGGAGGGTGAGGTCCAGATTGTGTCAACTGCTGCCCAAACTTTCCTGGCAACGTGCATCAATGGGGTATGCTGGACTGTCTACCACGGGGCCGGAACGAGGACCATCGCATCACCCAAGGGTCCTGTTATCCAGATGTATACCAATGTAGACCAAGACCTTGTGGGCTGGCCCGCTCCTCAAGGTGCCCGCTCATTGACACCCTGCACCTGCGGCTCCTCGGACCTTTACCTGGTCACGAGGCACGCCGATGTCATTCCCGTGCGCCGGCGGGGTGATAGCAGGGGCAGCCTGCTTTCGCCCCGGCCCATTTCCTACTTGAAAGGCTCCTCGGGGGGTCCGCTGTTGTGCCCCGCGGGACACGCCGTAGGCATATTCAGGGCCGCGGTGTGCACCCGTGGAGTGGCTAAGGCGGTGGACTTTATCCCTGTGGAGAACCTAGAGACAACCATGAGGTCCCCGGTGTTCACGGACAACTCCTCTCCACCAGCAGTGCCCCAGAGCTTCCAGGTGGCCCACCTGCATGCTCCCACCGGCAGCGGTAAGAGCACCAAGGTCCCGGCTGCATACGCAGCTCAGGGCTACAAGGTGCTAGTGCTCAACCCCTCTGTTGCTGCAACACTGGGCTTTGGTGCTTACATGTCCAAGGCCCATGGGATCGATCCTAACATCAGGACCGGGGTGAGAACAATTACCACTGGCAGCCCCATCACGTACTCCACCTACGGCAAGTTCCTTGCCGACGGCGGGTGCTCAGGGGGTGCTTATGACATAATAATTTGTGACGAGTGCCACTCCACGGATGCCACATCCATCTTGGGCATCGGCACTGTCCTTGACCAAGCAGAGACTGCGGGGGCGAGACTGGTTGTGCTCGCCACCGCTACCCCTCCGGGCTCCGTCACTGTGCCCCATCCTAACATCGAGGAGGTTGCTCTGTCCACCACCGGAGAGATCCCTTTTTACGGCAAGGCTATCCCCCTCGAGGTAATCAAGGGGGGGAGACATCTCATCTTCTGTCACTCAAAGAAGAAGTGCGACGAGCTCGCCGCAAAGCTGGTCGCATTGGGCATCAATGCCGTGGCCTACTACCGCGGTCTTGACGTGTCTGTCATCCCGACCAGCGGCGATGTTGTCGTCGTGGCAACTGATGCTCTCATGACCGGCTTTACCGGCGACTTCGACTCGGTGATAGACTGCAACACGTGTGTCACCCAGACAGTCGATTTCAGCCTTGACCCTACCTTCACCATTGAGACAACCACGCTTCCCCAGGATGCTGTCTCCCGCACTCAACGTCGGGGCAGGACTGGCAGGGGGAAGCCAGGCATCTACAGATTTGTGGCACCGGGGGAGCGCCCCTCCGGCATGTTCGACTCGTCCGTCCTCTGTGAGTGCTATGACGCGGGCTGTGCTTGGTATGAGCTCACGCCCGCCGAGACTACAGTTAGGCTACGAGCGTACATGAACACCCCGGGGCTTCCCGTGTGCCAGGACCATCTTGAATTTTGGGAGGGCGTCTTTACGGGCCTCACCCATATAGATGCCCACTTCCTATCCCAGACAAAGCAGAGTGGGGAGAACTTTCCTTACCTGGTAGCGTACCAAGCCACCGTGTGCGCTAGGGCTCAAGCCCCTCCCCCATCGTGGGACCAGATGTGGAAGTGTTTGATCCGCCTCAAGCCCACCCTCCATGGGCCAACACCTCTGCTATACAGACTGGGCGCTGTTCAGAATGAAGTCACCCTGACGCACCCAATCACCAAATACATCATGACATGCATGTCGGCCGACCTGGAGGTCGTCACG",
    ['NS3','1B'] => "GCGCCTATCACGGCCTACTCCCAACAGACGCGGGGCCTACTTGGCTGCATCATCACTAGCCTCACAGGCCGGGACAAGAACCAGGTCGAGGGGGAGGTTCAAGTGGTTTCCACCGCAACACAATCTTTCCTGGCGACCTGCGTCAACGGCGTGTGTTGGACTGTCTACCATGGCGCCGGCTCAAAGACCCTAGCCGGCCCAAAGGGCCCAATCACCCAAATGTACACCAATGTAGACCAGGACCTCGTCGGCTGGCAGGCGCCCCCCGGGGCGCGTTCCTTGACACCATGCACCTGCGGCAGCTCGGACCTTTACTTGGTCACGAGGCATGCTGATGTCATTCCGGTGCGCCGGCGGGGCGACAGCAGGGGGAGCCTACTCTCCCCCAGGCCCGTCTCCTACTTGAAGGGCTCTTCGGGTGGTCCACTGCTCTGCCCCTCGGGGCACGCTGTGGGCATCTTCCGGGCTGCTGTGTGCACCCGGGGGGTTGCGAAGGCGGTGGACTTTGTACCCGTTGAGTCTATGGAAACTACTATGCGGTCCCCGGTCTTCACGGACAACTCATCCCCCCCGGCCGTACCGCAGACATTCCAAGTGGCCCATCTACACGCTCCCACTGGCAGCGGCAAGAGCACTAAGGTGCCGGCTGCATATGCAGCCCAAGGGTACAAGGTACTCGTCCTGAACCCGTCCGTTGCCGCCACCTTAGGTTTTGGGGCGTATATGTCTAAGGCACATGGTGTCGACCCTAACATCAGAACTGGGGTAAGGACCATCACCACGGGCGCCCCCATCACGTACTCCACCTATGGCAAGTTCCTTGCCGACGGTGGTTGCTCTGGGGGCGCCTATGACATCATAATATGTGATGAGTGCCACTCAACTGACTCGACTACCATCTTGGGCATCGGCACAGTCCTGGACCAAGCGGAGACGGCTGGAGCGCGGCTCGTCGTGCTCGCCACCGCTACGCCTCCGGGATCGGTCACCGTGCCACATCCCAATATCGAGGAGGTGGCCCTGTCCAACACTGGAGAGATCCCCTTCTATGGCAAAGCCATCCCCATCGAGACCATCAAGGGGGGGAGGCATCTCATTTTCTGCCATTCCAAGAAGAAATGTGACGAGCTCGCCGCAAAGCTGTCGGGCCTCGGACTCAATGCTGTAGCGTATTACCGGGGTCTTGATGTGTCCGTCATACCGACCAGCGGAGACGTCGTTGTCGTGGCAACAGACGCTCTAATGACGGGCTTTACCGGCGACTTTGACTCAGTGATCGACTGTAACACATGTGTCACCCAGACAGTCGATTTCAGCTTGGACCCTACCTTCACCATTGAGACGACGACCGTGCCCCAAGACGCGGTGTCGCGCTCGCAGCGGCGAGGCAGGACTGGTAGGGGCAGGAGAGGCATCTACAGGTTTGTGACTCCAGGAGAACGGCCCTCGGGCATGTTCGATTCCTCGGTCCTGTGTGAGTGCTATGACGCGGGCTGTGCTTGGTACGAGCTCACGCCCGCCGAGACCTCGGTTAGGTTGCGGGCTTACCTAAATACACCAGGGTTGCCCGTCTGCCAGGACCATCTGGAGTTCTGGGAGAGCGTCTTCACAGGCCTCACCCACATAGATGCCCACTTCTTGTCCCAGACTAAGCAGGCAGGAGACAACTTCCCCTACCTGGTAGCATACCAGGCTACAGTGTGCGCCAGGGCTCAGGCTCCACCTCCATCGTGGGATCAAATGTGGAAGTGTCTCATACGGCTAAAGCCTACGCTGCACGGGCCAACACCCCTGCTGTATAGGCTAGGAGCCGTCCAAAACGAGGTCACCCTCACACACCCCATAACCAAATACATCATGGCATGCATGTCGGCTGACCTGGAGGTCGTCACG",
    ['NS3','2A'] => "GCCCCCATCACTGCTTACGCCCAGCAGACACGAGGTCTCTTGGGCGCCATAGTGGTGAGCATGACGGGGCGCGACAAGACAGAACAGGCCGGGGAAATCCAAGTCCTGTCCACAGTCACTCAGTCCTTCCTCGGAACATCCATTTCGGGGGTCTTATGGACTGTTTACCACGGAGCTGGCAACAAGACTCTAGCCGGCTCACGGGGCCCGGTCACGCAGATGTACTCGAGTGCCGAGGGGGACTTGGTAGGGTGGCCCAGCCCTCCTGGGACCAAATCTTTGGAGCCGTGCACGTGTGGAGCGGTCGACCTGTACCTGGTCACGCGGAACGCTGATGTCATCCCGGCTCGAAGACGCGGGGACAAGCGGGGAGCGTTACTCTCCCCGAGACCTCTTTCGACCTTGAAGGGGTCCTCGGGGGGACCGGTGCTTTGCCCTAGGGGCCACGCTGTCGGGATCTTCCGGGCAGCTGTGTGCTCTCGGGGCGTGGCTAAGTCCATAGATTTCATCCCCGTTGAGACACTCGACATCGTCACGCGGTCTCCCACCTTTAGTGACAACAGCACACCACCGGCTGTGCCCCAGACCTATCAGGTCGGGTACTTGCATGCCCCAACTGGCAGTGGAAAGAGCACCAAAGTCCCTGTCGCGTACGCCGCTCAGGGGTATAAAGTGCTAGTGCTTAATCCCTCGGTGGCTGCCACCCTGGGGTTTGGGGCGTACTTGTCCAAGGCACATGGCATCAATCCCAACATTAGGACTGGAGTCAGAACTGTGACGACCGGGGAGGCCATCACGTACTCCACATATGGCAAATTCCTCGCCGATGGGGGCTGCGCAGGCGGCGCCTATGACATCATCATATGCGATGAATGCCACGCCGTGGATGCTACCACCATTCTCGGCATCGGAACAGTTCTTGATCAAGCAGAGACAGCCGGGGTCAGGCTAACTGTGCTGGCCACGGCCACGCCCCCCGGGTCGGTGACAACCCCCCATCCCAATATAGAGGAGGTAGCCCTCGGGCAGGAGGGTGAGATCCCCTTCTATGGGAGGGCGATTCCCCTGTCTTACATCAAGGGAGGGAGACACTTGATCTTCTGCCACTCAAAGAAAAAGTGTGACGAGCTCGCGGCGGCCCTTCGGGGCATGGGCTTGAACGCTGTGGCATACTACAGAGGGTTGGACGTCTCCGTAATACCAACTCAGGGAGATGTAGTGGTCGTCGCCACCGACGCCCTCATGACGGGGTATACTGGAGACTTTGACTCCGTGATCGACTGCAACGTAGCGGTCACTCAAGTCGTAGACTTCAGCTTGGACCCCACCTTCACTATAACCACACAGACTGTCCCTCAAGACGCTGTCTCACGTAGCCAGCGCCGGGGGCGCACAGGTAGAGGAAGACTGGGCATTTATAGGTATGTTTCCACTGGTGAGCGAGCCTCAGGAATGTTTGACAGTGTAGTGCTCTGTGAGTGCTACGACGCAGGGGCTGCATGGTATGAGCTCACACCAGCGGAGACTACCGTCAGGCTTAGAGCGTATTTCAACACGCCTGGCTTGCCTGTGTGCCAAGACCATCTTGAGTTTTGGGAGGCAGTTTTCACCGGCCTCACACACATAGATGCCCACTTCCTTTCCCAAACAAAGCAATCGGGGGAGAATTTCGCATACTTAGTAGCCTATCAGGCTACAGTGTGCGCCAGAGCCAAAGCCCCTCCCCCGTCCTGGGACGTCATGTGGAAGTGCTTGACTCGACTCAAGCCCACGCTCGTGGGCCCTACACCTCTCCTGTACCGTTTGGGCTCTGTTACCAACGAGGTCACCCTCACACATCCTGTGACGAAATACATCGCCACATGCATGCAAGCTGACCTTGAGGTCATGACC",
#    ['NS3','2B'] => "GCTCCCATTACTGCTTACACTCAGCAGACTCGTGGTCTCCTGGGTGCCATCGTGGTCAGCCTAACGGGCCGCGACAAAAATGAGCAGGCTGGGCAGGTCCAGGTTCTGTCCTCCGTCACACAATCTTTCTTGGGGACATCTATTTCGGGGGTCCTCTGGACAGTATATCACGGGGCTGGTAATAAGACCTTGGCTGGCCCCAAAGGACCAGTCACTCAGATGTACACCAGCGCAGAGGGGGACCTCGTGGGATGGCCTAGCCCCCCCGGGACTAAGTCATTAGACCCCTGTACCTGCGGGGCCGTGGACCTCTACCTGGTCACCCGAAACGCTGATGTCATTCCGGTCCGGAGGAAAGATGACCGGCGGGGTGCACTACTCTCGCCAAGGCCTCTCTCAACCCTCAAAGGATCATCCGGCGGACCCGTGCTCTGCCCTAGGGGACACGCCGTGGGCTTGTTCAGAGCGGCCGTGTGTGCCAGGGGTGTGGCCAAATCTATTGACTTCATCCCTGTTGAATCTCTCGACATCGCCACACGGACGCCCAGTTTCTCTGACAACAGCACGCCACCAGCTGTGCCCCAGTCTTACCAGGTGGGCTACTTGCACGCACCAACAGGCAGCGGGAAGAGCACCAAGGTCCCTGCCGCATATGCCAGTCAGGGGTATAAAGTACTCGTACTAAATCCCTCTGTCGCGGCCACACTTGGTTTTGGGGCCTACATGTCCAAAGCCCACGGGATCAACCCCAACATCAGAACCGGAGTACGGACTGTGACCACCGGGGACCCTATCACCTACTCCACTTATGGCAAGTTTATCGCGGATGGAGGCTGCTCAGCTGGCGCCTATGACATCATCATATGCGACGAATGCCATTCAGTGGACGCTACTACCATCCTTGGCATTGGAACAGTCCTCGACCAGGCTGAGACCGCAGGTGTCAGGCTAGTGGTTTTAGCCACAGCCACGCCTCCCGGTACGGTGACAACTCCCCACAGTAACATAGAGGAGGTGGCCCTTGGTCATGAGGGCGAGATCCCTTTTTATGGCAAGGCTATTCCCCTAGCTTTCATCAAGGGGGGCAGACACCTGATCTTTTGCCATTCAAAGAAGAAGTGCGACGAGCTCGCAGCAGCCCTTCGGGGCATGGGTGTCAATGCCGTTGCCTACTACAGGGGTCTCGACGTCTCCGTTATACCAACTCAAGGAGACGTGGTGGTCGTCGCCACCGATGCCCTAATGACTGGATACACCGGTGACTTTGACTCTGTCATCGACTGCAACGTTGCAGTCACTCAGATTGTTGACTTTAGCCTAGACCCAACCTTTACCATCACCACTCAAACCGTCCCTCAGGACGCTGTCTCCCGTAGTCAACGTAGAGGGAGAACTGGGAGGGGGCGACTGGGCATTTACAGGTATGTCTCGTCAGGCGAGAGGCCGTCTGGGATGTTCGACAGCGTAGTGCTCTGCGAGTGCTATGATGCCGGGGCAGCCTGGTACGAGCTTACGCCTGCTGAGACTACGGTGAGACTCCGGGCTTATTTCAACACGCCCGGTTTACCCGTGTGTCAAGACCACCTGGAGTTCTGGGAAGCGGTCTTCACAGGTCTCACACACATTGATGCCCACTTCCTCTCCCAGACGAAGCAAGGAGGAGACAACTTTGCGTATCTAACGGCCTACCAGGCCACAGTATGCGCTAGGGCAAAGGCCCCTCCTCCTTCGTGGGACGTGATGTGGAAGTGTCTAACTAGGCTCAAACCTACACTGACTGGTCCTACCCCCCTCCTGTACCGCTTGGGTGCCGTGACCAACGAGGTTACCCTGACGCACCCCGTGACGAAATATATCGCCACGTGCATGCAAGCTGACCTCGAGATCATGACA",
    ['NS3','3'] => "GCCCCGATCACAGCATACGCCCAGCAAACTAGGGGCCTTCTTGGGACTATTGTGACTAGCTTGACTGGCAGGGATAAGAACGTGGTGACCGGTGAAGTGCAGGTGCTTTCTACGGCTACCCAGACCTTCCTAGGTACAACAGTAGGGGGGGTTATGTGGACTGTTTACCATGGTGCAGGTTCGAGAACACTCGCGGGCGCCAAACATCCCGCGCTCCAAATGTACACAAATGTAGATCAGGACCTCGTTGGGTGGCCAGCCCCTCCAGGGGCTAAGTCTCTTGAACCGTGCGCCTGCGGGTCTGCAGACTTATACTTGGTTACCCGCGATGCCGATGTCATCCCTGCTCGGCGCAGGGGGGACTCCACAGCGAGCTTGCTCAGTCCTAGGCCTCTCGCCTGTCTCAAAGGTTCCTCTGGAGGTCCTGTTATGTGCCCTTCGGGGCATGTTGCAGGGATCTTTAGGGCTGCTGTGTGCACCAGAGGTGTAGCAAAAGCCCTACAGTTCATACCAGTGGAAACCCTTAGTACACAGGCTAGGTCTCCATCTTTCTCTGACAATTCAACTCCTCCTGCTGTTCCACAGAGCTATCAAGTAGGATACCTTCATGCCCCGACCGGCAGCGGTAAGAGCACAAAGGTCCCGGCCGCTTATGTAGCACAAGGATATAATGTTCTCGTGCTGAATCCATCGGTGGCGGCCACATTAGGCTTCGGCTCTTTCATGTCGCGTGCCTATGGGATCGACCCCAACATCCGCACTGGGAACCGCACCGTTACAACTGGTGCTAAACTGACCTATTCCACCTACGGTAAGTTTCTCGCGGACGGGGGTTGCTCCGGGGGGGCATATGATGTGATTATCTGTGATGAATGTCATGCCCAAGACGCTACTAGCATATTGGGTATAGGCACGGTCTTAGATCAGGCTGAGACGGCTGGGGTGAGGCTGACGGTTTTAGCGACAGCAACTCCCCCAGGCAGCATCACTGTGCCACATTCTAACATCGAAGAAGTGGCCTTGGGCTCTGAAGGTGAGATCCCTTTCTACGGTAAGGCTATACCGATAGCCCTGCTCAAGGGGGGGAGGCACCTTATCTTTTGCCATTCCAAGAAAAAATGTGATGAGATAGCGTCCAAACTCAGAGGCATGGGGCTCAACGCTGTAGCGTACTATAGGGGTCTCGATGTGTCCGTCATACCAACAACAGGAGACGTCGTAGTTTGCGCTACTGACGCCCTCATGACTGGATTCACCGGAGACTTCGATTCTGTCATAGATTGCAACGTGGCTGTTGAACAGTACGTTGACTTCAGCCTGGACCCCACCTTTTCCATTGAGACCCGCACTGCTCCCCAAGATGCGGTTTCCCGCAGCCAACGTCGTGGCCGTACGGGCCGAGGTAGACTCGGTACGTACCGATATGTCGCCCCCGGTGAAAGACCGTCTGGAATGTTTGACTCGGTTGTTCTCTGTGAGTGCTATGACGCGGGCTGCTCGTGGTACGATCTGCAGCCCGCTGAGACCACAGTCAGACTGAGAGCTTACTTGTCCACACCGGGGTTACCTGTCTGCCAAGACCATTTAGACTTTTGGGAGAGCGTCTTCACTGGACTAACTCACATAGATGCCCACTTTCTGTCACAGACTAAGCAGCAGGGACTTAACTTCTCGTACCTAACTGCCTACCAAGCCACTGTGTGCGCCCGCGCGCAGGCTCCTCCCCCAAGTTGGGACGAGATGTGGAAGTGTCTCGTGCGGCTTAAGCCAACACTACATGGACCTACGCCCCTTCTATATCGGTTGGGGCCTGTCCAAAATGAAATCTGCTTGACACACCCCATCACAAAATACGTCATGGCATGCATGTCAGCTGATCTGGAAGTAACCACC",
    ['NS3','4'] => "GCCCCCATCACGGCGTACGCGCAGCAGACCCGCGGCTTGTTCAGTACCATCATAACGAGCCTCACTGGCAGGGACACCAATGAAAATTGTGGTGAAGTACAGGTCCTGTCCACCGCCACGCAGTCCTTCCTGGGTACTGCAGTCAACGGCGTGATGTGGACCGTCTACCACGGGGCGGGTAGCAAGACCATCAGCGGCCCGAAGGGACCTGTCAATCAAATGTACACCAATGTTGACCAAGACCTGGTGGGGTGGCCAGCGCCTCCCGGAGTCAAATCTCTTACGCCATGCACCTGTGGCGCGTCTGACTTGTACTTAGTCACCAGGCATGCAGACGTGGTGCCCGTGCGCAGGAGAGGGGACACCAGGGGAGCTCTCTTGAGCCCCAGGCCCATATCCACTCTTAAGGGGTCTTCTGGTGGTCCGCTGCTGTGCCCCATGGGACACGCTGCCGGCTTGTTCCGCGCGGCGGTGTGTACTCGAGGGGTAGCTAAAGCGGTGGACTTCGTCCCGGTTGAATCTCTTGAGACTACTATGAGATCACCAGTGTTCACTGACAACTCAACACCCCCTGCGGTGCCTCAGACCTACCAGGTCGCGCACTTGCATGCACCAACAGGAAGTGGCAAGAGCACCAAAGTCCCGGCAGCGTACGCAGCTCAGGGCTATAAAGTGTTAGTGCTTAACCCCTCGGTTGCGGCCACACTGGGATTTGGGGCGTACATGTCCAAGGCATACGGCATCGACCCAAACATTCGGTCAGGAGTCAGGACCATCACCACGGGTGCGCCAATCACGTACTCCACGTATGGTAAGTTCCTGGCTGATGGAGGTTGCAGCGGGGGGGCATACGACATAATCATCTGTGACGAGTGCCATTCCACTGACTCCACGACGATCCTTGGCATAGGCACGGTCCTGGACCAAGCGGAGACTGCTGGAGTGCGCCTCGTCGTGCTCGCAACCGCTACCCCGCCAGGGTCGGTGACTACACCCCATTCCAACATAGAGGAGGTCGCCCTGCCGACAACGGGGGAAATACCCTTTTACGGCAAGGCGATCCCCCTAGAGCTAATCAAGGGGGGCAGACACCTCATCTTCTGCCACTCAAAGAAAAAGTGTGATGAACTGGCCAAACAACTAACATCTCTCGGTCTGAATGCTGTAGCCTACTACAGAGGCTTAGACGTTTCGGTGATTCCCACTTCTGGGGACGTCGTGGTATGCGCCACGGACGCCCTCATGACGGGGTTTACCGGCGACTTTGACTCAGTGATAGACTGCAATACATCTGTAATACAGACCGTTGACTTCAGCTTGGACCCCACCTTCTCCATAGAGACAACAACCGTTCCTCAGGACGCGGTATCCCGCAGCCAGCGGAGAGGCCGCACTGGTAGGGGGAGGTTGGGCATATACCGGTATGTCACCCCAGGGGAGAGACCATCGGGCATATTCGACACTTCAGTGATCTGTGAGTGCTACGATGCTGGGTGCGCCTGGTACGAGCTGACACCGGCTGAGACCACAACAAGGCTGAGAGCTTACTTCAACACACCAGGCCTTCCTGTGTGCCAAGACCACCTGGAGTTCTGGGAGAGCGTCTTTACAGGGTTAACCCAAATAGACGGCCATTTCCTATCCCAGACCAAGCAATCGGGTGAGAATTTCCCATACCTTGTTGCTTATCAGGCCACAGTGTGCGCCAGAGCTCTGGCACCCCCACCAAGCTGGGACACCATGTGGAAGTGCCTAATCCGCCTCAAGCCTACCCTGCATGGGCCCACACCTCTCCTCTACAGACTGGGGTCCGTGCAGAATGAAGTGACACTTACCCATCCTATTACCAAATACATCATGGCCTGCATGTCAGCTGACCTCGAGGTAGTGACG",
    ['NS3','6A'] => "GCTCCCATCACCGCGTATGCGCAGCAGACGAGGGGCCTAGTCGGCACCATTGTGACCAGCCTAACCGGGCGTGACAAAAATGAGGTCGAAGGGGAGGTACAGGTGGTCTCCACGGCTACCCAATCCTTCCTGGCGACCTCCATTAACGGTGTCATGTGGACTGTTTATCATGGGGCCGGTTCAAAGACTCTCGCTGGACCGAAAGGACCAGTGTGTCAAATGTACACCAATGTGGACAAGGACCTAGTAGGATGGCCATCTCCCCCGGGAGCAAGGTCGCTCACCCCATGTACTTGTGGCTCTAGTGACCTCTATCTGGTCACGAGGGAGGCCGACGTTATCCCCGCAAGGCGCAGGGGTGACAACCGTGCTGCCCTCCTCTCTCCTAGGCCCATAAGCACCTTGAAAGGCTCCTCGGGAGGCCCCATTATGTGTCCCTCGGGGCACGTTGTGGGACTCTTCCGAGCTGCCGTATGCACAAGGGGTGTAGCAAAATCCTTAGATTTTATCCCAGTGGAAAACATGGAGACGACTATGCGCTCTCCCTCATTCACAGACAACTCCACGCCGCCTGCGGTGCCCCAGACCTATCAGGTAGGGTATCTGCACGCACCAACAGGCAGCGGAAAGAGCACCCGTGTTCCGGCGGCGTACGCTAGCCAGGGCTACAAGGTGTTGGTCTTGAACCCATCGGTGGCGGCAACGCTTAGCTTTGGCTCTTATATGAGGCAAGCTTACGGCGTGGAGCCGAATGTCCGGACCGGGGTCAGGACTGTAACCACAGGGGGCGCTATCACGTACTCCACATATGGGAAATTCTTGGCCGATGGGGGATGTTCCGGAGGAGCGTACGACATCATCATCTGTGATGAGTGCCACTCCACAGACCCTACGACGGTGTTGGGCATTGGCACGGTTCTCGACCAGGCTGAGACTGCCGGGGTTCGCCTTACTGTGCTCGCAACAGCAACGCCGCCGGGTTCTGTCACTGTCCCCCATCCTAACATAACAGAGACAGCCCTCCCGACTACGGGAGAAATACCATTTTATGGAAAGGCCATCCCCCTTGAGTACATCAAAGGGGGAAGACATCTCATATTCTGTCACTCAAAGAAGAAGTGCGATGAGCTGGCCGGGAAACTGAAATCACTCGGCTTAAACGCCGTCGCATTCTACAGAGGTGTCGATGTGTCCGTCATCCCCACCTCGGGCGATGTCGTCGTCTGCGCAACAGACGCCCTTATGACCGGCTACACAGGCGATTTCGATTCCGTCATCGACTGTAACGTAGCCGTGACACAGGTGGTGGATTTCAGCTTGGACCCAACATTTTCCATAGAGACTACCACCGTCCCTCAGGATGCGGTATCACGGAGCCAACGACGAGGCCGCACGGGGCGGGGTAAACCGGGGGTGTACAGATTTGTCTCCCAAGGGGAGAGGCCTTCGGGTATGTTCGACACCGTCGTCCTGTGTGAGGCTTATGACACGGGATGCGCGTGGTACGAACTAACCCCTTCTGAAACAACTGTCAGGTTGAGGGCCTATATGAACACTCCTGGCCTTCCCGTATGCCAAGACCACCTGGAATTTTGGGAAGGCGTGTTTACTGGCTTGACTCACATAGACGCCCACTTTCTGTCTCAGACGAAGCAGGGGGGTGAGAACTTCGCGTACCTCGTGGCATACCAGGCTACAGTGTGCGCCAGGGCCAAAGCCCCCCCGCCTTCTTGGGATACGATGTGGAAGTGTCTCATCAGACTCAAACCCACCCTTACCGGCCCCACTCCACTCTTGTATCGGCTGGGGGCCGTCCAAAATGAGATAATAACAACCCATCCAATAACCAAATACATCATGACCTGTATGTCTGCGGATTTGGAGGTTATCACC",

    ['NS5A','1A'] => "TCCGGTTCCTGGCTAAGGGACATCTGGGACTGGATATGCGAGGTGCTGAGCGACTTTAAGACCTGGCTGAAAGCCAAGCTCATGCCACAACTGCCTGGGATTCCCTTTGTGTCCTGCCAGCGCGGGTATAGGGGGGTCTGGCGAGGAGACGGCATTATGCACACTCGCTGCCACTGTGGAGCTGAGATCACTGGACATGTCAAAAACGGGACGATGAGGATCGTCGGTCCTAGGACCTGCAGGAACATGTGGAGTGGGACGTTCCCCATTAACGCCTACACCACGGGCCCCTGTACTCCCCTTCCTGCGCCGAACTATAAGTTCGCGCTGTGGAGGGTGTCTGCAGAGGAATACGTGGAGATAAGGCGGGTGGGGGACTTCCACTACGTATCGGGTATGACTACTGACAATCTTAAATGCCCGTGCCAGATCCCATCGCCCGAATTTTTCACAGAATTGGACGGGGTGCGCCTACATAGGTTTGCGCCCCCTTGCAAGCCCTTGCTGCGGGAGGAGGTATCATTCAGAGTAGGACTCCACGAGTACCCGGTGGGGTCGCAATTACCTTGCGAGCCCGAACCGGACGTAGCCGTGTTGACGTCCATGCTCACTGATCCCTCCCATATAACAGCAGAGGCGGCCGGGAGAAGGTTGGCGAGAGGGTCACCCCCTTCTATGGCCAGCTCCTCGGCCAGCCAGCTGTCCGCTCCATCTCTCAAGGCAACTTGCACCGCCAACCATGACTCCCCTGACGCCGAGCTCATAGAGGCTAACCTCCTGTGGAGGCAGGAGATGGGCGGCAACATCACCAGGGTTGAGTCAGAGAACAAAGTGGTGATTCTGGACTCCTTCGATCCGCTTGTGGCA---GAGGAGGATGAGCGGGAGGTCTCCGTACCCGCAGAAATTCTG---CGGAAGTCTCGGAGATTCGCCCGGGCCCTGCCCGTTTGGGCGCGGCCGGACTACAACCCCCCGCTAGTAGAGACGTGGAAAAAGCCTGACTACGAACCACCTGTGGTCCATGGCTGCCCGCTACCACCTCCACGGTCCCCTCCTGTGCCTCCGCCTCGGAAAAAGCGT---ACGGTGGTCCTCACCGAATCAACCCTATCTACTGCCTTGGCCGAGCTTGCCACCAAAAGTTTT---------------GGCAGCTCCTCAACTTCCGGCATTACGGGCGACAATACGACAACATCCTCTGAGCCCGCCCCTTCTGGCTGCCCCCCCGACTCCGACGTTGAGTCCTATTCTTCCATGCCCCCCCTGGAGGGGGAGCCTGGGGATCCGGATCTCAGCGACGGG------------------------------------------------------------TCATGGTCGACGGTCAGTAGTGGGGCCGACACGGAAGATGTCGTGTGCTGC".gsub('-','X'),
    ['NS5A','1B'] => "TCCGGCTCGTGGCTAAGAGATGTTTGGGATTGGATATGCACGGTGTTGACTGATTTCAAGACCTGGCTCCAGTCCAAGCTCCTGCCGCGATTGCCGGGAGTCCCCTTCTTCTCATGTCAACGTGGGTACAAGGGAGTCTGGCGGGGCGACGGCATCATGCAAACCACCTGCCCATGTGGAGCACAGATCACCGGACATGTGAAAAACGGTTCCATGAGGATCGTGGGGCCTAGGACCTGTAGTAACACGTGGCATGGAACATTCCCCATTAACGCGTACACCACGGGCCCCTGCACGCCCTCCCCGGCGCCAAATTATTCTAGGGCGCTGTGGCGGGTGGCTGCTGAGGAGTACGTGGAGGTTACGCGGGTGGGGGATTTCCACTACGTGACGGGCATGACCACTGACAACGTAAAGTGCCCGTGTCAGGTTCCGGCCCCCGAATTCTTCACAGAAGTGGATGGGGTGCGGTTGCACAGGTACGCTCCAGCGTGCAAACCCCTCCTACGGGAGGAGGTCACATTCCTGGTCGGGCTCAATCAATACCTGGTTGGGTCACAGCTCCCATGCGAGCCCGAACCGGACGTAGCAGTGCTCACTTCCATGCTCACCGACCCCTCCCACATTACGGCGGAGACGGCTAAGCGTAGGCTGGCCAGGGGATCTCCCCCCTCCTTGGCCAGCTCATCAGCTAGCCAGCTGTCTGCGCCTTCCTTGAAGGCAACATGCACTACCCGTCATGACTCCCCGGACGCTGACCTCATCGAGGCCAACCTCCTGTGGCGGCAGGAGATGGGCGGGAACATCACCCGCGTGGAGTCAGAAAATAAGGTAGTAATTTTGGACTCTTTCGAGCCGCTCCAAGCG---GAGGAGGATGAGAGGGAAGTATCCGTTCCGGCGGAGATCCTG---CGGAGGTCCAGGAAATTCCCTCGAGCGATGCCCATATGGGCACGCCCGGATTACAACCCTCCACTGTTAGAGTCCTGGAAGGACCCGGACTACGTCCCTCCAGTGGTACACGGGTGTCCATTGCCGCCTGCCAAGGCCCCTCCGATACCACCTCCACGGAGGAAGAGG---ACGGTTGTCCTGTCAGAATCTACCGTGTCTTCTGCCTTGGCGGAGCTCGCCACAAAGACCTTC---------------GGCAGCTCCGAATCGTCGGCCGTCGACAGCGGCACGGCAACGGCCTCTCCTGACCAGCCCTCCGACGACGGCGACGCGGGATCCGACGTTGAGTCGTACTCCTCCATGCCCCCCCTTGAGGGGGAGCCGGGGGATCCCGATCTCAGCGACGGG------------------------------------------------------------TCTTGGTCTACCGTAAGCGAGGAGGCT---AGTGAGGACGTCGTCTGCTGC".gsub('-','X'),
    ['NS5A','2A'] => "TCCGGATCCTGGCTCCGCGACGTGTGGGACTGGGTTTGCACCATCTTGACAGACTTCAAAAATTGGCTGACCTCTAAATTGTTCCCCAAGCTGCCCGGCCTCCCCTTCATCTCTTGTCAAAAGGGGTACAAGGGTGTGTGGGCCGGCACTGGCATCATGACCACGCGCTGCCCTTGCGGCGCCAACATCTCTGGCAATGTCCGCCTGGGCTCTATGAGGATCACAGGGCCTAAAACCTGCATGAACACCTGGCAGGGGACCTTTCCTATCAATTGCTACACGGAGGGCCAGTGCGCGCCGAAACCCCCCACGAACTACAAGACCGCCATCTGGAGGGTGGCGGCCTCGGAGTACGCGGAGGTGACGCAGCATGGGTCGTACTCCTATGTAACAGGACTGACCACTGACAATCTGAAAATTCCTTGCCAACTACCTTCTCCAGAGTTTTTCTCCTGGGTGGACGGTGTGCAGATCCATAGGTTTGCACCCACACCAAAGCCGTTTTTCCGGGATGAGGTCTCGTTCTGCGTTGGGCTTAATTCCTATGCTGTCGGGTCCCAGCTTCCCTGTGAACCTGAGCCCGACGCAGACGTATTGAGGTCCATGCTAACAGATCCGCCCCACATCACGGCGGAGACTGCGGCGCGGCGCTTGGCACGGGGATCACCTCCATCTGAGGCGAGCTCCTCAGTGAGCCAGCTATCAGCACCGTCGCTGCGGGCCACCTGCACCACCCACAGCAACACCTATGACGTGGACATGGTCGATGCCAACCTGCTC------------ATGGAGGGCGGTGTGGCTCAGACAGAGCCTGAGTCCAGGGTGCCCGTTCTGGACTTTCTCGAGCCAATGGCCGAG---GAAGAGAGCGACCTTGAGCCCTCAATACCATCGGAGTGCATG---CTCCCCAGGAGCGGGTTTCCACGGGCCTTACCGGCTTGGGCACGGCCTGACTACAACCCGCCGCTCGTGGAATCGTGGAGGAGGCCAGATTACCAACCGCCCACCGTTGCTGGTTGTGCTCTCCCCCCCCCCAAGAAGGCCCCGACGCCTCCCCCAAGGAGACGCCGG---ACAGTGGGTCTGAGCGAGAGCACCATATCAGAAGCCCTCCAGCAACTGGCCATCAAGACCTTTGGCCAG---CCCCCCTCGAGCGGTGATGCAGGCTCGTCCACGGGGGCGGGCGCCGCCGAATCCGGCGGTCCGACGTCCCCTGGTGAGCCGGCCCCCTCAGAGACAGGTTCCGCCTCCTCTATGCCCCCCCTCGAGGGGGAGCCTGGAGATCCGGACCTGGAGTCTGATCAGGTAGAGCTTCAACCTCCCCCCCAGGGGGGGGGGGTAGCTCCCGGTTCGGGCTCGGGGTCTTGGTCTACTTGCTCCGAGGAG------GACGATACCACCGTGTGCTGC".gsub('-','X'),
#    ['NS5A','2B'] => "".gsub('-','X'),
    ['NS5A','3'] => "AGCGGCGATTGGCTGCGTGACATCTGGGACTGGGTTTGCTCGGTGTTGTCCGACTTCAAGACGTGGCTCTCTGCTAAGATTATGCCAGCACTCCCTGGGCTGCCCTTCATCTCCTGTCAAAAGGGATACAAGGGCGTGTGGCGGGGGGATGGTGTGATGTCGACACGCTGTCCTTGCGGGGCATCAATCACTGGCCACGTGAAGAATGGGTCCATGCGGCTTGCGGGGCCGCGTATGTGTGCTAACATGTGGCACGGTACTTTCCCCATCAATGAGTACACCACCGGACCCAGCACACCTTGCCCATCACCCAACTACACTCGCGCACTATGGCGCGTGGCTGCCAGCAGCTACGTTGAGGTGCGCCGGGTGGGGGACTTCCATTATATTACGGGGGCTACAGAAGATGAGCTCAAGTGTCCGTGCCAAGTGCCGGCTGCTGAGTTCTTTACTGAAGTGGATGGGGTGAGACTCCACCGTTACGCCCCTCCATGTAAGCCCCTGTTGAGAGAAGAGATCACTTTCTCGGTAGGGTTGCATTCCTACGCGATAGGATCTCAACTCCCCTGTGAGCCAGAACCAGATGTTTCTGTGTTGACCTCGATGTTGAGAGACCCTTCTCATATCACCGCCGAGACGGCAGCGCGCCGCCTTGCGCGCGGGTCCCCTCCATCAGAGGCAAGCTCATCCGCCAGCCAACTATCGGCTCCGTCGTTGAAGGCCACTTGCCAGACGCATAGGCCTCATCCAGACGCTGAGCTGGTGGACGCCAACTTGTTATGGCGGCAAGAGATGGGCAGCAACATTACACGGGTGGAGTCTGAAACGAAGGTTGTGATTCTTGATTCATTCGAACCTCTGAGAGCC---GAAGCTGACGACGCCGAGCTCTCGGTGGCTGCAGAGTGTTTC---AAGAAGCCTCCCAAGTATCCTCCAGCCCTTCCTATCTGGGCCAGGCCGGACTACAACCCTCCACTGTTGGACCGCTGGAAAGCACCGGATTATGTACCACCAACTGTCCATGGATGTGCCTTACCACCACGGGGCGCTCCACCGGTGCCTCCTCCTCGGAGGAAAAGA---ACAATCCAGCTGGACGGCTCCAATGTGTCCGCGGCGCTAGCTGCGCTAGCGGAAAAATCATTCACCCCA---AAATCGCAGGAAGAGAATAGCTCATCCTCTGGGGTCGACACACAGTCCAGCACTACCTCCAGGATGCCCCCCTCTCCAGGAGGGGAGTCCGACTCAGAGTCATGCTCGTCCATGCCTCCTCTCGAGGGAGAGCCGGGCGATCCGGACTTGAGTTGCGAC------------------------------------------------------------TCTTGGTCCACCGTTAGTGACAAC---GAGGAGCAGAGCGTGGTCTGCTGC".gsub('-','X'),
    ['NS5A','4'] => "GCCGAATCTTGGCTATGGGAGGTATGGGATTGGGTCTGCACCGTGCTGAGTGACTTCAAGACGTGGCTAAAAGCCAAGTTGCTGCCCCTCATGCCAGGCATCCCCTTCCTCTCATGCCAGAGGGGCTATAAGGGAGAGTGGCGCGGAGATGGCGTGATGCATACCACATGCCCCTGCGGAGCAGATCTGGCAGGTCACATCAAGAACGGCTCGATGAGAATCACCGGGCCGAAAACCTGCAGCAACACATGGCATGGTACCTTCCCCATCAATGCTTACACCACAGGCCCTGGTGTACCCATCCCGGCGCCGAACTACAAGTTCGCGCTTTGGAGGGTGTCCGCCGAGGACTACGTGGAGGTTCGCAGAGTGGGTGATTTCCATTATGTCACCGGGGTAACACAAGACAACATCAAGTGCCCCTGCCAAGTTCCGGCCCCAGAGTTCTTCACGGAAGTGGACGGCATCAGGCTACACCGCCACGCCCCGAAGTGCAAACCCTTGCTGCGGGACGAAGTGTCGTTCTCAGTAGGACTCAATTCGTTCGTAGTGGGATCACAACTCCCATGCGAGCCAGAGCCGGACGTGGCAGTGCTAACATCCATGCTGACAGACCCATCACACATAACGGCGGAATCGGCGCGTCGGAGATTGGCTCGAGGGTCACGACCCTCGCTAGCTAGTTCCTCGGCGAGTCAGCTTTCCGCCCCGTCTCTCAAGGCCACGTGTACCGCTCCCCATGACTCCCCTGGTACTGATCTCCTCGAGGCTAACCTCTTG------------TGGGGGTCTACCGCTACCAGGGTTGAGACGGACGAGAAGGTAATAATACTAGACTCTTTTGAGTCATGTGTGGCTGAGCCAAATGATGACAGGGAAGTCTCGGTTGCCGCGGAAATCCTG---CGTCCGACCAAGAAGTTCCCTCCAGCACTACCGATCTGGGCCCGGCCGGATTACAATCCACCTCTTACCGAGACGTGGAAGCAGCAGGACTACAAGCCTCCGACCGTCCACGGGTGCGCTCTGCCTCCCGGCAAGCAGCCCCCCGTTCCTCCTCCCAGGAGGAAACGG---ACGGTACAGCTCACTGAGTCCGTTGTTTCTACCGCTTTGGCAGAGCTGGCCGCAAAGACCTTTGGCCAG------TCAGAGCCGAGCTCAGACCGTGATACAGACCTTACCACCCCAACTGAGACCACAGACTCGGGCCCCATCGTCGTGGATGATGCATCCGATGACGGATCTTATTCGTCAATGCCTCCACTAGAGGGGGAGCCCGGTGACCCGGACTTGACATCAGAC------------------------------------------------------------TCTTGGTCCACTGTTAGCGGATCG---------GAGGACGTCGTGTGCTGC".gsub('-','X'),
    ['NS5A','6A'] => "GCTACCTCATGGTTACGCGACGTGTGGGACTGGGTGTGTACAGTGCTATCTGATTTTAAAGTATGGCTGCAAGCCAAACTTTTCCCCCGCCTGCCGGGGATCCCCTTCCTCTCGTGCCAAGCGGGATATAGGGGAGTCTGGGCAGGGGACGGGGTGTGCCACACCACTTGTACCTGTGGGGCCGTGATAGCTGGACACGTCAAAAATGGCACCATGAAAATCACGGGGCCCAAGACATGCAGTAACACTTGGCACGGGACTTTTCCAATCAATGCCACTACTACCGGCCCCAGCACACCACGACCAGCCCCCAACTATCAGCGCGCTCTTTGGCGGGTATCTGCCGAGGACTACGTTGAGGTACGGAGGTTGGGCGACTGCCACTATGTGGTAGGGGTCACTGCTGAAGGGTTAAAGTGCCCTTGTCAGGTGCCTGCGCCTGAATTCTTCACTGAGGTCGATGGCGTGAGGATACACCGTTACGCGCCACCTTGCAAGCCCTTGCTCAGGGACGAAGTGACTTTCTCTGTGGGTCTCTCAAACTATGCCGTAGGGTCGCAGCTCCCTTGCGAGCCAGAGCCTGACGTGACCGTAGTCACATCAATGCTCACAGACCCCACGCACATCACCGCAGAAACGGCAGCACGGCGGTTAAAGAAGGGGTCCCCCCCCTCCTTGGCCAGCTCTTCCGCCAACCAGTTGTCTGCACCGTCCCTCAGGGCTACTTGCACAACTTCCCAAAAACACCCGGAAATGGAACTCCTCCAAGCCAACCTCCTCTGGAAGCACGAAATGGGAAGCCACATCCCTCGAGTCCAATCAGAAAACAAAGTTGTAGTACTTGACTCCTTTGAGCTCTACCCGCTT---GAGTATGAGGAGAGGGAAATTTCAGTATCAGTTGAGTGCCACAGGCAACCCAGGTGCAAATTCCCCCCAGTTTTCCCAGTATGGGCCAGGCCTGATAACAACCCACCTTTTATACAAGCATGGCAAATGCCCGGATACGAGCCTCCAGTTGTGTCTGGGTGTGCCGTCGCCCCACCTAAACCGGCACCAGTTCCCCCGCCGAGGCGGAAGAGG---CTAGTGCACTTGGATGAGTCCACGGTCTCGCACGCCTTGGCGCAGCTCGCCGACAAGGTATTTGTGGAGAGTAGTAATGACCCAGGACCTAGTTCAGACTCGGGGCTATCAATAACCAGTCCCGTTCCACCTGACCCAACAACACCGGAGGATGCCGGCTCAGAAGCAGAGTCCTATAGCTCAATGCCCCCTCTCGAGGGGGAGCCTGGTGACCCTGACCTAAGCTCAGGC------------------------------------------------------------TCTTGGTCCACTGTGAGCGATGAG---------GACGACGTCGTATGTTGT".gsub('-','X'),

    ['NS5B','1A'] => "TCAATGTCTTATTCCTGGACAGGCGCACTCGTCACCCCGTGCGCTGCGGAAGAACAAAAACTGCCCATCAACGCACTGAGCAACTCGTTGCTACGCCATCACAATCTGGTGTATTCCACCACTTCACGCAGTGCTTGCCAAAGGCAGAAGAAAGTCACATTTGACAGACTGCAAGTTCTGGACAGCCATTACCAGGACGTGCTCAAGGAGGTCAAAGCAGCGGCGTCAAAAGTGAAGGCTAACTTGCTATCCGTAGAGGAAGCTTGCAGCCTGACGCCCCCACATTCAGCCAAATCCAAGTTTGGCTATGGGGCAAAAGACGTCCGTTGCCATGCCAGAAAGGCCGTAGCCCACATCAACTCCGTGTGGAAAGACCTTCTGGAAGACAGTGTAACACCAATAGACACTACCATCATGGCCAAGAACGAGGTTTTCTGCGTTCAGCCTGAGAAGGGGGGTCGTAAGCCAGCTCGTCTCATCGTGTTCCCCGACCTGGGCGTGCGCGTGTGCGAGAAGATGGCCCTGTACGACGTGGTTAGCAAGCTCCCCCTGGCCGTGATGGGAAGCTCCTACGGATTCCAATACTCACCAGGACAGCGGGTTGAATTCCTCGTGCAAGCGTGGAAGTCCAAGAAGACCCCGATGGGGTTCTCGTATGATACCCGCTGTTTTGACTCCACAGTCACTGAGAGCGACATCCGTACGGAGGAGGCAATTTACCAATGTTGTGACCTGGACCCCCAAGCCCGCGTGGCCATCAAGTCCCTCACTGAGAGGCTTTATGTTGGGGGCCCTCTTACCAATTCAAGGGGGGAAAACTGCGGCTACCGCAGGTGCCGCGCGAGCGGCGTACTGACAACTAGCTGTGGTAACACCCTCACTTGCTACATCAAGGCCCGGGCAGCCTGTCGAGCCGCAGGGCTCCAGGACTGCACCATGCTCGTGTGTGGCGACGACTTAGTCGTTATCTGTGAAAGTGCGGGGGTCCAGGAGGACGCGGCGAGCCTGAGAGCCTTCACGGAGGCTATGACCAGGTACTCCGCCCCCCCCGGGGACCCCCCACAACCAGAATACGACTTGGAGCTTATAACATCATGCTCCTCCAACGTGTCAGTCGCCCACGACGGCGCTGGAAAGAGGGTCTACTACCTTACCCGTGACCCTACAACCCCCCTCGCGAGAGCCGCGTGGGAGACAGCAAGACACACTCCAGTCAATTCCTGGCTAGGCAACATAATCATGTTTGCCCCCACACTGTGGGCGAGGATGATACTGATGACCCATTTCTTTAGCGTCCTCATAGCCAGGGATCAGCTTGAACAGGCTCTTAACTGTGAGATCTACGGAGCCTGCTACTCCATAGAACCACTGGATCTACCTCCAATCATTCAAAGACTCCATGGCCTCAGCGCATTTTCACTCCACAGTTACTCTCCAGGTGAAATCAATAGGGTGGCCGCATGCCTCAGAAAACTTGGGGTCCCGCCCTTGCGAGCTTGGAGACACCGGGCCCGGAGCGTCCGCGCTAGGCTTCTGTCCAGAGGAGGCAGGGCTGCCATATGTGGCAAGTACCTCTTCAACTGGGCAGTAAGAACAAAGCTCAAACTCACTCCAATAGCGGCCGCTGGCCGGCTGGACTTGTCCGGTTGGTTCACGGCTGGCTACAGCGGGGGAGACATTTATCACAGCGTGTCTCATGCCCGGCCCCGCTGGTTCTGGTTTTGCCTACTCCTGCTCGCTGCAGGGGTAGGCATCTACCTCCTCCCCAACCGA".gsub('-','X'),
    ['NS5B','1B'] => "TCGATGTCCTACACATGGACAGGCGCCCTGATCACGCCATGCGCTGCGGAGGAAACCAAGCTGCCCATCAATGCACTGAGCAACTCTTTGCTCCGTCACCACAACTTGGTCTATGCTACAACATCTCGCAGCGCAAGCCTGCGGCAGAAGAAGGTCACCTTTGACAGACTGCAGGTCCTGGACGACCACTACCGGGACGTGCTCAAGGAGATGAAGGCGAAGGCGTCCACAGTTAAGGCTAAACTTCTATCCGTGGAGGAAGCCTGTAAGCTGACGCCCCCACATTCGGCCAGATCTAAATTTGGCTATGGGGCAAAGGACGTCCGGAACCTATCCAGCAAGGCCGTTAACCACATCCGCTCCGTGTGGAAGGACTTGCTGGAAGACACTGAGACACCAATTGACACCACCATCATGGCAAAAAATGAGGTTTTCTGCGTCCAACCAGAGAAGGGGGGCCGCAAGCCAGCTCGCCTTATCGTATTCCCAGATTTGGGGGTTCGTGTGTGCGAGAAAATGGCCCTTTACGATGTGGTCTCCACCCTCCCTCAGGCCGTGATGGGCTCTTCATACGGATTCCAATACTCTCCTGGACAGCGGGTCGAGTTCCTGGTGAATGCCTGGAAAGCGAAGAAATGCCCTATGGGCTTCGCATATGACACCCGCTGTTTTGACTCAACGGTCACTGAGAATGACATCCGTGTTGAGGAGTCAATCTACCAATGTTGTGACTTGGCCCCCGAAGCCAGACAGGCCATAAGGTCGCTCACAGAGCGGCTTTACATCGGGGGCCCCCTGACTAATTCTAAAGGGCAGAACTGCGGCTATCGCCGGTGCCGCGCGAGCGGTGTACTGACGACCAGCTGCGGTAATACCCTCACATGTTACTTGAAGGCCGCTGCGGCCTGTCGAGCTGCGAAGCTCCAGGACTGCACGATGCTCGTATGCGGAGACGACCTTGTCGTTATCTGTGAAAGCGCGGGGACCCAAGAGGACGAGGCGAGCCTACGGGCCTTCACGGAGGCTATGACTAGATACTCTGCCCCCCCTGGGGACCCGCCCAAACCAGAATACGACTTGGAGTTGATAACATCATGCTCCTCCAATGTGTCAGTCGCGCACGATGCATCTGGCAAAAGGGTGTACTATCTCACCCGTGACCCCACCACCCCCCTTGCGCGGGCTGCGTGGGAGACAGCTAGACACACTCCAGTCAATTCCTGGCTAGGCAACATCATCATGTATGCGCCCACCTTGTGGGCAAGGATGATCCTGATGACTCATTTCTTCTCCATCCTTCTAGCTCAGGAACAACTTGAAAAAGCCCTAGATTGTCAGATCTACGGGGCCTGTTACTCCATTGAGCCACTTGACCTACCTCAGATCATTCAACGACTCCATGGCCTTAGCGCATTTTCACTCCATAGTTACTCTCCAGGTGAGATCAATAGGGTGGCTTCATGCCTCAGGAAACTTGGGGTACCGCCCTTGCGAGTCTGGAGACATCGGGCCAGAAGTGTCCGCGCTAGGCTACTGTCCCAGGGGGGGAGGGCTGCCACTTGTGGCAAGTACCTCTTCAACTGGGCAGTAAGGACCAAGCTCAAACTCACTCCAATCCCGGCTGCGTCCCAGTTGGATTTATCCAGCTGGTTCGTTGCTGGTTACAGCGGGGGAGACATATATCACAGCCTGTCTCGTGCCCGACCCCGCTGGTTCATGTGGTGCCTACTCCTACTTTCTGTAGGGGTAGGCATCTATCTACTCCCCAACCGA".gsub('-','X'),
    ['NS5B','2A'] => "TCCATGTCATACTCCTGGACCGGGGCTCTAATAACTCCCTGTAGCCCCGAAGAGGAAAAGTTGCCAATCAACCCTTTGAGTAACTCGCTGTTGCGATACCATAACAAGGTGTACTGTACAACATCAAAGAGCGCCTCACAGAGGGCTAAAAAGGTAACTTTTGACAGGACGCAAGTGCTCGACGCCCATTATGACTCAGTCTTAAAGGACATCAAGCTAGCGGCTTCCAAGGTCAGCGCAAGGCTCCTCACCTTGGAGGAGGCGTGCCAGTTGACTCCACCCCATTCTGCAAGATCCAAGTATGGATTCGGGGCCAAGGAGGTCCGCAGCTTGTCCGGGAGGGCCGTTAACCACATCAAGTCCGTGTGGAAGGACCTCCTGGAAGACCCACAAACACCAATTCCCACAACCATCATGGCCAAAAATGAGGTGTTCTGCGTGGACCCCGCCAAGGGGGGTAAGAAACCAGCTCGCCTCATCGTTTACCCTGACCTCGGCGTCCGGGTCTGCGAGAAAATGGCCCTCTATGACATTACACAAAAGCTTCCTCAGGCGGTAATGGGAGCTTCCTATGGCTTCCAGTACTCCCCTGCCCAACGGGTGGAGTATCTCTTGAAAGCATGGGCGGAAAAGAAGGACCCCATGGGTTTTTCGTATGATACCCGATGCTTCGACTCAACCGTCACTGAGAGAGACATCAGGACCGAGGAGTCCATATACCAGGCCTGCTCCCTGCCCGAGGAGGCCCGCACTGCCATACACTCGCTGACTGAGAGACTTTACGTAGGAGGGCCCATGTTCAACAGCAAGGGTCAAACCTGCGGTTACAGACGTTGCCGCGCCAGCGGGGTGCTAACCACTAGCATGGGTAACACCATCACATGCTATGTGAAAGCCCTAGCGGCCTGCAAGGCTGCGGGGATAGTTGCGCCCACAATGCTGGTATGCGGCGATGACCTAGTAGTCATCTCAGAAAGCCAGGGGACTGAGGAGGACGAGCGGAACCTGAGAGCCTTCACGGAGGCCATGACCAGGTACTCTGCCCCTCCTGGTGATCCCCCCAGACCGGAATATGACCTGGAGCTAATAACATCCTGTTCCTCAAATGTGTCTGTGGCGTTGGGCCCGCGGGGCCGCCGCAGATACTACCTGACCAGAGACCCAACCACTCCACTCGCCCGGGCTGCCTGGGAAACAGTTAGACACTCCCCTATCAATTCATGGCTGGGAAACATCATCCAGTATGCTCCAACCATATGGGTTCGCATGGTCCTAATGACACACTTCTTCTCCATTCTCATGGTCCAAGACACCCTGGACCAGAACCTCAACTTTGAGATGTATGGATCAGTATACTCCGTGAATCCTTTGGACCTTCCAGCCATAATTGAGAGGTTACACGGGCTTGACGCCTTTTCTATGCACACATACTCTCACCACGAACTGACGCGGGTGGCTTCAGCCCTCAGAAAACTTGGGGCGCCACCCCTCAGGGTGTGGAAGAGTCGGGCTCGCGCAGTCAGGGCGTCCCTCATCTCCCGTGGAGGGAAAGCGGCCGTTTGCGGCCGATATCTCTTCAATTGGGCGGTGAAGACCAAGCTCAAACTCACTCCATTGCCGGAGGCGCGCCTACTGGACTTATCCAGTTGGTTCACCGTCGGCGCCGGCGGGGGCGACATTTTTCACAGCGTGTCGCGCGCCCGACCCCGCTCATTACTCTTCGGCCTACTCCTACTTTTCGTAGGGGTAGGCCTCTTCCTACTCCCCGCTCGG".gsub('-','X'),
#    ['NS5B','2B'] => "".gsub('-','X'),
    ['NS5B','3'] => "TCTATGTCGTACTCTTGGACCGGTGCCCTGATAACACCATGTAGTGCTGAGGAGGAGAAACTGCCCATCAGCCCACTCAGCAATTCTTTGTTGAGACATCATAACCTAGTCTATTCAACGTCGTCTAGAAGCGCTTCTCAGCGTCAGAGGAAGGTTACCTTCGACAGACTGCAGGTGCTCGACGACCATTATAAGACTGCATTAAAGGAGGTGAAGGAGCGAGCGTCTAGGGTGAAGGCCCGCATGCTCACCATCGAGGAAGCGTGCGCGCTCGTCCCTCCTCACTCTGCCCGGTCGAAGTTCGGGTATAGTGCGAAGGACGTTCGCTCCTTGTCCAGCAGGGCCATTGACCAGATCCGCTCCGTCTGGGAGGACCTGCTGGAAGACACCACAACTCCAATTCCAACCACCATCATGGCGAAGAACGAGGTGTTTTGTGTGGACCCCGCTAAAGGGGGCCGCAAGCCCGCTCGCCTCATTGTGTACCCTGATCTGGGGGTGCGTGTCTGTGAGAAACGCGCCCTATATGACGTGATACAGAAGTTGTCAATTGAGACGATGGGTTCCGCTTATGGATTCCAATACTCGCCTCAACAGCGGGTCGAACGTCTACTGAAGATGTGGACCTCAAAGAAAACCCCCTTGGGGTTCTCATATGACACCCGCTGCTTTGACTCAACTGTCACTGAACAGGACATCAGGGTAGAAGAGGAGATATATCAATGCTGTAACCTTGAACCGGAGGCCAGGAAAGTGATCTCCTCCCTCACGGAGCGGCTTTACTGCGGGGGCCCTATGTTCAACAGCAAGGGGGCCCAGTGTGGTTATCGCCGTTGCCGTGCCAGTGGAGTTCTGCCTACCAGCTTTGGCAATACAATCACTTGTTACATCAAGGCCACAGCGGCCGCGAAGGCCGCAGGCCTCCGGAACCCGGACTTTCTTGTCTGCGGAGATGATTTGGTCGTGGTGGCTGAGAGTGATGGCGTCGATGAGGATAGAGCAGCCCTGAGAGCCTTCACGGAGGCTATGACCAGGTACTCTGCTCCACCCGGAGATGCCCCACAGCCCACCTATGACCTTGAGCTCATTACATCTTGCTCCTCTAACGTCTCCGTGGCACGGGACGACAAGGGGAGGAGGTATTATTACCTCACCCGTGATGCCACTACTCCCCTAGCCCGCGCGGCTTGGGAAACAGCCCGTCACACTCCAGTCAACTCCTGGTTAGGTAACATCATCATGTACGCGCCTACCATCTGGGTGCGCATGGTAATGATGACACACTTTTTCTCCATACTCCAATCCCAGGAGATACTTGATCGACCCCTTGACTTTGAAATGTACGGGGCCACTTACTCTGTCACTCCGCTGGATTTACCAGCAATCATTGAAAGACTCCATGGTCTAAGCGCATTCACGCTCCACAGTTACTCTCCAGTAGAGCTCAATAGGGTCGCGGGGACACTCAGGAAGCTTGGGTGCCCCCCCCTACGAGCTTGGAGACATCGGGCACGAGCAGTGCGCGCCAAGCTTATCGCCCAGGGAGGGAAGGCCAAAATATGCGGCCTTTATCTCTTCAATTGGGCGGTACGCACCAAGACCAATCTCACTCCACTGCCAGCCACTGGCCAGTTGGATTTGTCCAGCTGGTTTACGGTTGGTGTCGGCGGGAACGACATTTATCACAGCGTGTCACGTGCCCGAACCCGCCATTTGCTGCTTTGCCTACTCCTACTAACGGTAGGGGTAGGCATCTTTCTCCTGCCAGCTCGG".gsub('-','X'),
    ['NS5B','4'] => "TCAATGTCATATTCATGGACTGGGGCGCTTGTAACACCTTGCGCGGCTGAAGAATCAAAGCTGCCAATTAGCCCCCTGAGCAATTCACTTTTGCGCCATCACAATATGGTGTATGCCACGACCACCCGTTCTGCTGTGACACGGCAGAAGAAGGTGACCTTCGACCGCCTGCAGGTGGTGGACAGTCACTACAATGAAGTGCTTAAGGAGATAAAGGCACGAGCATCCAGAGTGAAGGCACGCTTGCTTACCACAGAGGAAGCTTGCGACCTGACGCCCCCCCACTCAGCCAGATCAAAGTTCGGCTACGGGGCGAAGGATGTTCGGAGCCATTCCCGCAAGGCCATTAACCACATCAGCTCCGTGTGGAAGGACTTGCTGGACGACAACAATACCCCAATACCAACAACAATCATGGCCAAAAATGAGGTCTTCGCTGTGAACCCAGCGAAGGGAGGTCGGAAGCCTGCTCGCCTGATCGTGTATCCGGATCTCGGGGTCCGGGTTTGCGAGAAGAGAGCGCTTCACGACGTCATCAAAAAACTGCCTGAGGCCGTGATGGGAGCCGCTTATGGCTTCCAATACTCCCCAGCGCAGCGGGTGGAATTTCTTCTGACTGCTTGGAAGTCGAAGAAGACCCCAATGGGGTTCTCTTATGATACCCGCTGCTTTGACTCCACTGTAACCGAAAAGGACATCAGGGTCGAGGAAGAGGTCTATCAGTGTTGTGACCTGGAGCCCGAAGCCCGCAAAGTCATCACCGCCCTCACAGATAGACTCTATGTGGGCGGCCCTATGCACAACAGCAAGGGAGACCTTTGTGGGTATCGGAGATGTCGCGCAAGCGGCGTCTACACCACCAGCTTCGGGAACACGCTGACGTGCTATCTCAAAGCCACGGCCGCCATCAGGGCGGCGGGGCTGAGAGACTGCACTATGTTGGTTTGCGGTGATGACTTAGTCGTCATCGCTGAGAGCGACGGCGTAGAGGAGGACAACCGAGCCCTCCGAGCCTTCACGGAGGCTATGACGAGATACTCGGCTCCCCCAGGTGACGCCCCGCAGCCAGCATATGACCTGGAACTAATAACATCATGTTCATCCAACGTCTCAGTCGCGCACGACGTGACGGGTAAAAAGGTATATTACCTAACCCGAGACCCTGAAACTCCCTTGGCGCGAGCCGCATGGGAGACAGTCCGACACACTCCAGTCAATTCCTGGTTGGGAAACATCATAGTCTACGCTCCCACAATATGGGTGCGCATGATATTGATGACCCACTTTTTCTCAATACTCCAGAGCCAGGAAGCCCTTGAGAAAGCACTCGACTTCGATATGTACGGAGTCACCTACTCTATCACTCCGCTGGATTTACCGGCAATCATTCAAAGACTCCATGGCTTAAGCGCGTTCACGCTGCACGGATACTCTCCACACGAACTCAACCGGGTGGCCGGAGCCCTCAGAAAACTTGGGGTACCCCCGCTGAGAGCGTGGAGACATCGGGCCCGAGCAGTCCGCGCTAAGCTTATCGCCCAGGGAGGTAGAGCCAAAATATGTGGCATATACCTCTTTAACTGGGCGGTAAAAACCAAACTCAAACTCACTCCATTGCCTGCCGCTGCCAAACTCGATTTATCGGGTTGGTTTACGGTAGGCGCCGGCGGGGGAGACATTTATCACAGCATGTCTCATGCCCGACCCCGCTATTTACTCCTGTGCCTACTCCTACTTACAGTAGGGGTAGGCATCTTCCTGCTGCCTGCTCGG".gsub('-','X'),
    ['NS5B','6A'] => "TCCATGTCCTATTCCTGGACGGGGGCTCTGATAACACCATGTGCTGCGGAGGAGGAGAAGCTCCCAATAAATCCCCTGAGCAACTCCCTCGTAAGACACCATAACATGGTGTATTCTACCACATCACGCAGCGCCAGCCTCCGCCAGAAGAAGGTCACATTTGACAGAGTGCAAGTGTTCGACCAACATTATCAGGATGTACTAAAGGAGATTAAGCTTCGAGCGTCCACGGTGCAGGCGAAGCTCTTATCCATAGAGGAAGCCTGCGACCTCACACCATCGCACTCAGCCCGGTCCAAATATGGGTATGGTGCACAGGACGTTAGAAGCCGTGCTAGCAAGGCCGTTGACCACATCCCCTCCGTGTGGGAGGGCTTGCTAGAAGACTCTGATACCCCAATTCCAACGACCATCATGGCTAAGAATGAGGTCTTCTGCGTAGATCCATCGAAGGGTGGACGCAAGCCGGCACGCCTAATAGTTTACCCAGACTTGGGCGTGCGGGTCTGCGAGAAGATGGCCCTATACGATGTAACGCAGAAGTTACCACAGGCCGTGATGGGTCCGGCATACGGATTCCAGTACTCCCCTAACCAGAGGGTTGAGTACTTGCTCAAAATGTGGCGGTCAAAGAAGGTGCCCATGGGCTTTTCTTACGACACCAGATGTTTTGATTCAACCGTCACCGAGCGGGATATCCGGACTGAGAACGACATCTATCAGTCTTGCCAGCTGGATCCCGTGGCAAGGAGGGTGGTATCATCTCTAACGGAACGGCTCTACGTAGGCGGCCCCATGGCAAACTCCAAGGGACAATCATGTGGCTACCGTAGATGCCGCGCCAGTGGGGTGCTGCCCACCAGCATGGGAAACACCCTCACATGCTATCTGAAGGCACAGGCCGCCTGCAGGGCGGCCAACATCAAGGACTGTGACATGTTGGTGTGCGGAGATGACTTGGTGGTCATTTGTGAGAGTGCTGGCGTCCAGGAAGACACTGCGTCACTGCGAGCATTCACGGATGCTATGACCAGGTACTCAGCTCCCCCTGGAGACGCTCCGCAACCTACGTATGACCTCGAGCTCATAACATCGTGCTCGTCCAATGTTTCCGTCGCCCACGAAGGCAATGGGAAGAAATATTACTACCTCACACGTGACTGTACTACTCCACTCGCGCGGGCCGCCTGGGAGACAGCCCGCCACACTCCAGTCAATTCCTGGTTGGGCAACATCATTATGTTTGCCCCCACGATATGGGTGCGTATGGTTCTGATGAACCATTTTTTCTCCATCCTCCAGTCGCAAGAACAATTGGAGAAAGCATTCGACTTTGACATCTACGGAGTGACCTATTCCGTTTCTCCACTTGATCTCCCAGCAATCATTCAACGACTCCATGGTATGGCAGCATTTTCACTCCACGGATACTCTCCAGTTGAGCTCAATAGGGTAGGGGCTTGCCTCAGGAAACTTGGGGTACTTCCCTCGCGAGCCTGGAGACATCGAGCCAGAGCTGTCAGAGCCAAACTCATTGCCCAAGGGGGGAAAGCGGCTATATGCGGTAAGTACCTCTTTAACTGGGCAGTGAAGACCAAGCTAAAACTCACTCCATTGGTCTCCGCGAGCAAGCTTGACTTATCAGGCTGGTTCGTGGCAGGCTACGACGGGGGGGACATTTATCACAGCGTGTCCCAGGCCCGACCCCGTTTCTTACTCCTTGGCCTACTCCTACTTACCGTAGGGGTAGGCATCTTTTTGCTCCCCGCTCGG".gsub('-','X'),
  }

  #subtype; 1a � red, 1b � blue, 2 � brown, 3a � green, 4 � orange.
  #I think we can skip 3, and instead give the 3 if it doesn't match a wildtype or mutation as part of the algorithm.
  @@rules = [
    #boceprevir
    #['NS3', 'BPV','1A', 6, 36, ['M']],
    ['NS3', 'BPV','1A', 5, 36, ['A','M']],
    #['NS3', 'BPV','1A', 6, 54, ['S']],
    ['NS3', 'BPV','1A', 5, 54, ['A','S']],
    ['NS3', 'BPV','1A', 5, 55, ['A','I']],
    ['NS3', 'BPV','1A', 4, 107, ['I']],
    #['NS3', 'BPV','1A', 6, 155, ['K']],
    ['NS3', 'BPV','1A', 5, 155, ['K']],
    ['NS3', 'BPV','1A', 5, 156, ['S','T']],
    ['NS3', 'BPV','1A', 4, 158, ['I']],
    ['NS3', 'BPV','1A', 4, 168, ['N']],
    ['NS3', 'BPV','1A', 5, 170, ['F','T','V']],

    ['NS3', 'BPV','1B', 5, 36, ['M','A']],
    #['NS3', 'BPV','1B', 6, 54, ['S','A']],
    ['NS3', 'BPV','1B', 5, 54, ['C','G','S','A']],
    #['NS3', 'BPV','1B', 6, 55, ['A']],
    ['NS3', 'BPV','1B', 5, 55, ['A']],
    ['NS3', 'BPV','1B', 4, 107, ['I']],
    ['NS3', 'BPV','1B', 5, 155, ['C','K']],
    #['NS3', 'BPV','1B', 6, 156, ['S']],
    ['NS3', 'BPV','1B', 5, 156, ['T','V','S']],
    ['NS3', 'BPV','1B', 4, 158, ['I']],
    #['NS3', 'BPV','1B', 6, 170, ['A']],
    ['NS3', 'BPV','1B', 5, 170, ['T','A']],
    ['NS3', 'BPV','1B', 4, 175, ['L']],

    #Telaprevir
    #['NS3', 'TPV','1A', 6, 36, ['M']],
    ['NS3', 'TPV','1A', 5, 36, ['A','G','I','L','M']],
    ['NS3', 'TPV','1A', 5, 54, ['A','S']],
    ['NS3', 'TPV','1A', 4, 132, ['V']],
    #['NS3', 'TPV','1A', 6, 155, ['K']],
    ['NS3', 'TPV','1A', 5, 155, ['G','M','T','K']],
    ['NS3', 'TPV','1A', 5, 156, ['S','T','V']],
    ['NS3', 'TPV','1A', 4, 168, ['N']],

    #['NS3', 'TPV','1B', 6, 36, ['A']],
    ['NS3', 'TPV','1B', 5, 36, ['G','I','L','M','A']],
    #['NS3', 'TPV','1B', 6, 54, ['A']],
    ['NS3', 'TPV','1B', 5, 54, ['S','A']],
    ['NS3', 'TPV','1B', 5, 155, ['K']],
    #['NS3', 'TPV','1B', 6, 156, ['S']],
    ['NS3', 'TPV','1B', 5, 156, ['F','T','V','S']],

    #Simeprevir
    #Richard changes (Q80G, Q80L, S122G, S122N, S122T, S122A (1b)) are not major mutations.
    ['NS3', 'SPV','1A', 5, 80, ['K','R']],
    #['NS3', 'SPV','1A', 5, 122, ['G','R']], #original from the paper
    ['NS3', 'SPV','1A', 5, 122, ['R']],
    #['NS3', 'SPV','1A', 6, 155, ['K']],
    ['NS3', 'SPV','1A', 5, 155, ['K']],
    #['NS3', 'SPV','1A', 6, 168, ['E','V']],
    ['NS3', 'SPV','1A', 5, 168, ['A','H','E','V']],
    ['NS3', 'SPV','1A', 5, 170, ['T']],

    #['NS3', 'SPV','1B', 6, 80, ['R']],
    ['NS3', 'SPV','1B', 5, 80, ['K','R']],
    #['NS3', 'SPV','1A', 5, 122, ['R']], #added by Richard
    ['NS3', 'SPV','1B', 5, 122, ['A','I','T']], #original from the paper
    #['NS3', 'SPV','1B', 5, 122, ['I','T']], #Removed by Richard
    ['NS3', 'SPV','1B', 5, 155, ['Q']],
    #['NS3', 'SPV','1B', 6, 168, ['E','V']],
    ['NS3', 'SPV','1B', 5, 168, ['A','F','H','T','E','V']],

    #Paritaprevir
    ['NS3', 'PTV','1A', 4, 36, ['A','M']],
    ['NS3', 'PTV','1A', 4, 55, ['I']],
    ['NS3', 'PTV','1A', 5, 56, ['H']],
    ['NS3', 'PTV','1A', 4, 80, ['K']], #added 24-Feb-2016
    ['NS3', 'PTV','1A', 4, 155, ['K']],
    #['NS3', 'PTV','1A', 6, 168, ['A','V','Y']],
    ['NS3', 'PTV','1A', 5, 168, ['E','A','V','Y']],

    #['NS3', 'PTV','1B', 6, 56, ['H']],
    ['NS3', 'PTV','1B', 5, 56, ['H']],
    ['NS3', 'PTV','1B', 3, 80, []], #added 24-Feb-2016
    #['NS3', 'PTV','1B', 6, 168, ['V']],
    ['NS3', 'PTV','1B', 5, 168, ['A','K','V']],

    #['NS3', 'PTV','4', 6, 168, ['V']],
    ['NS3', 'PTV','4', 5, 168, ['V']],

    #No Resistance(added by Richard):
    ['NS3', 'SPV','1A', 1, 80, ['G','L']],
    ['NS3', 'SPV','1B', 1, 80, ['G','L']],
    ['NS3', 'SPV','1A', 1, 122, ['N','T','S']],
    ['NS3', 'SPV','1B', 1, 122, ['N','S']],
    ['NS3', 'SPV','1A', 1, 170, ['V']],
    ['NS3', 'BPV','1B', 1, 170, ['I']],

    #Grazoprevir
    ['NS3', 'GZR','1A', 5, 56, ['H']],
#    ['NS3', 'GZR','1A', 1, 80, ['K']], #This should be susceptible, but it currently defaults to susceptible, so cool.
    ['NS3', 'GZR','1A', 4, 122, ['R']],
    ['NS3', 'GZR','1A', 4, 156, ['G']],
    ['NS3', 'GZR','1A', 5, 156, ['T','V']],
    ['NS3', 'GZR','1A', 5, 168, ['A','E','F','G','H','I','K','L','N','T','V','Y']],

    ['NS3', 'GZR','1B', 5, 56, ['H']],
#    ['NS3', 'GZR','1B', 1, 80, ['K']], #This should be susceptible, but it currently defaults to susceptible, so cool.
    ['NS3', 'GZR','1B', 5, 107, ['I']],
    ['NS3', 'GZR','1B', 5, 155, ['G','T','W']],
    ['NS3', 'GZR','1B', 5, 156, ['T','V']],
    ['NS3', 'GZR','1B', 5, 168, ['A','F','G','H','I','K','L','T','V','Y']],

    ['NS3', 'GZR','4', 5, 77, ['S']],
    ['NS3', 'GZR','4', 5, 168, ['A','V']],
    ['NS3', 'GZR','4', 4, 168, ['R']],
    ['NS3', 'GZR','4', 4, 178, ['R']],


    #daclatasvir
    #['NS5A', 'DCV','1A', 6, 28, ['T']],
    ['NS5A', 'DCV','1A', 5, 28, ['A','S','V','T']],
    #['NS5A', 'DCV','1A', 6, 30, ['E','H','R']],
    ['NS5A', 'DCV','1A', 5, 30, ['D','G','K','T','E','H','R']],
    #['NS5A', 'DCV','1A', 6, 31, ['M']],
    ['NS5A', 'DCV','1A', 5, 31, ['I','V','M']],
    #['NS5A', 'DCV','1A', 6, 58, ['D']],
    ['NS5A', 'DCV','1A', 5, 58, ['R','D']],
    ['NS5A', 'DCV','1A', 1, 58, ['P']], #added by Richard
    #['NS5A', 'DCV','1A', 6, 93, ['H','N']],
    ['NS5A', 'DCV','1A', 5, 93, ['C','H','N']],

    ['NS5A', 'DCV','1B', 5, 28, ['M','T']],
    ['NS5A', 'DCV','1B', 4, 29, ['S','X']],
    ['NS5A', 'DCV','1B', 5, 30, ['G','H','P','Q']],
    #['NS5A', 'DCV','1B', 6, 31, ['M','V']],
    ['NS5A', 'DCV','1B', 5, 31, ['F','I','M','V']],
    ['NS5A', 'DCV','1B', 4, 32, ['L','X']],  #wtf is X?  Deletion??  #yeah, deletion.  Careful.
    ['NS5A', 'DCV','1B', 5, 58, ['S']],
    ['NS5A', 'DCV','1B', 1, 58, ['P']], #added by Richard
    ['NS5A', 'DCV','1B', 4, 62, ['D']],
    ['NS5A', 'DCV','1B', 4, 92, ['K']],
    #['NS5A', 'DCV','1B', 6, 93, ['H']],
    ['NS5A', 'DCV','1B', 5, 93, ['N','H']],

    ['NS5A', 'DCV','4', 5, 28, ['M']],
    #['NS5A', 'DCV','4', 6, 30, ['H','S']],
    ['NS5A', 'DCV','4', 5, 30, ['H','S']],

    ['NS5A', 'DCV','3', 5, 30, ['K']],
    ['NS5A', 'DCV','3', 5, 31, ['V','M']],
    ['NS5A', 'DCV','3', 5, 93, ['H']],

    #ledipasvir
    ['NS5A', 'LDV','1A', 5, 28, ['T']],
    #['NS5A', 'LDV','1A', 6, 30, ['E','R']],
    ['NS5A', 'LDV','1A', 5, 30, ['H','E','R']],
    #['NS5A', 'LDV','1A', 6, 31, ['M','V']],
    ['NS5A', 'LDV','1A', 5, 31, ['M','V']],
    ['NS5A', 'LDV','1A', 5, 58, ['D']],
    ['NS5A', 'LDV','1A', 1, 58, ['P']], #added by Richard
    #['NS5A', 'LDV','1A', 6, 93, ['C','H','N']],
    ['NS5A', 'LDV','1A', 5, 93, ['S','C','H','N']],

    #['NS5A', 'LDV','1B', 6, 93, ['H']],
    ['NS5A', 'LDV','1B', 5, 93, ['C','H']],

    ['NS5A', 'LDV','3', 5, 30, ['K']],
    ['NS5A', 'LDV','3', 5, 93, ['H']],



    #ombitasvir
    #['NS5A', 'OBV','1A', 6, 28, ['T']],
    ['NS5A', 'OBV','1A', 5, 28, ['V','T']],
    #['NS5A', 'OBV','1A', 6, 30, ['R']],
    ['NS5A', 'OBV','1A', 5, 30, ['R']],
    ['NS5A', 'OBV','1A', 3, 31, []], #No mutations, we'll need to make this res level 3
    ['NS5A', 'OBV','1A', 5, 58, ['D']],
    ['NS5A', 'OBV','1A', 1, 58, ['P']], #added by Richard
    ['NS5A', 'OBV','1A', 5, 93, ['C','H','N']],

    ['NS5A', 'OBV','1B', 3, 31, []], #No mutations, we'll need to make this res level 3
    #['NS5A', 'OBV','1B', 6, 93, ['H']],
    ['NS5A', 'OBV','1B', 5, 93, ['C','H']],

    #['NS5A', 'OBV','4', 6, 28, ['V']],
    ['NS5A', 'OBV','4', 5, 28, ['S','V']],
    ['NS5A', 'OBV','4', 3, 31, []], #No mutations, we'll need to make this res level 3

    ['NS5A', 'OBV','3', 5, 31, ['F']],
    ['NS5A', 'OBV','3', 5, 93, ['H']],

    #Elbasvir
    ['NS5A', 'EBV','1A', 5, 28, ['T','A','G']],
    ['NS5A', 'EBV','1A', 5, 30, ['D','E','R']],
    ['NS5A', 'EBV','1A', 4, 30, ['H']],
    ['NS5A', 'EBV','1A', 5, 31, ['I', 'M','F','V']],
    ['NS5A', 'EBV','1A', 4, 58, ['D']],
    ['NS5A', 'EBV','1A', 5, 93, ['C','H','N']],

    ['NS5A', 'EBV','1B', 5, 31, ['F','V']],
    ['NS5A', 'EBV','1B', 4, 31, ['M']],
    ['NS5A', 'EBV','1B', 5, 93, ['H']],

    ['NS5A', 'EBV','3', 5, 30, ['D','K']],
    ['NS5A', 'EBV','3', 5, 31, ['F','M']],
    ['NS5A', 'EBV','3', 5, 93, ['H']],

    ['NS5A', 'EBV','4', 5, 30, ['H','F']],
    ['NS5A', 'EBV','4', 4, 30, ['S']],
    ['NS5A', 'EBV','4', 4, 32, ['L']],
    ['NS5A', 'EBV','4', 5, 58, ['D']],
    ['NS5A', 'EBV','4', 5, 93, ['H']],


    #sofosbuvir
    #['NS5B', 'SOF','1A', 6, 282, ['T']],  #Added by Richard
    ['NS5B', 'SOF','1A', 5, 282, ['T']],  #Added by Richard

    #['NS5B', 'SOF','1B', 6, 282, ['T']],  #Added by Richard
    ['NS5B', 'SOF','1B', 5, 282, ['T']],  #Added by Richard

    ['NS5B', 'SOF','3', 4, 159, ['F']],
    ['NS5B', 'SOF','3', 4, 321, ['A']],

    ['NS5B', 'SOF','4', 5, 282, ['T']],  #Added by Richard

    ['NS5B', 'SOF','2A', 5, 282, ['T']],



    #dasabuvir
    ['NS5B', 'DSV','1A', 5, 316, ['Y']],
    #['NS5B', 'DSV','1A', 6, 414, ['T']],
    ['NS5B', 'DSV','1A', 5, 414, ['I','T']],
    ['NS5B', 'DSV','1A', 5, 448, ['H']],
    ['NS5B', 'DSV','1A', 5, 553, ['T']],
    ['NS5B', 'DSV','1A', 5, 554, ['S']],
    #['NS5B', 'DSV','1A', 6, 556, ['G']],
    ['NS5B', 'DSV','1A', 5, 556, ['G']],
    ['NS5B', 'DSV','1A', 4, 559, ['G','N']], #????

    ['NS5B', 'DSV','1B', 5, 316, ['Y']],
    #['NS5B', 'DSV','1B', 6, 556, ['G']],
    ['NS5B', 'DSV','1B', 5, 556, ['G']],
    #Done!
  ]

  def initialize()
    #meh, nothing to initialize really
  end

  #Returns true if this is potentially a mutation spot.
  def HCVAlgorithm.is_muc_lot(loc, region)
    @rules.each do |rule|
      return true if(rule[4] == loc and rule[0] == region)
    end
    return false
  end

  #Takes an aligned nuc seq, returns drug interpretations
  def interpret(nuc_seq, region, geno, inserts=[], aa_seq=nil)
    inserts = [] if(inserts == nil)
    if(!@@genotypes.include?(geno.upcase()))
      raise "Genotype not recognized"
    end
    if(!['NS3','NS5A','NS5B'].include?(region.upcase()))
      raise "Region not recognized"
    end

    aa_seq = translate_complete_to_array(nuc_seq) if(!aa_seq)

    result = {} #Should contain mutations and drug calls.
    result['drugs'] = []

    mut_list = []

    @@drugs.find_all(){|d| d[:class] == region }.each do |drug|
      res_level = 1

      #['NS3', 'BPV','1A', 6, 36, [muts]]
      #Resistant
      @@rules.find_all() {|a| a[0] == region and a[1] == drug[:code] and a[2] == geno and a[3] == 6}.each do |r|
        aas = aa_seq[r[4] - 1]
        if(aas.any?(){|aa| r[5].include?(aa) })
          res_level = 6 if(res_level == 1)
          mut_list << [r[4], aas]
        elsif(r[5].include?('i') and inserts.find(){|a| (a[0] + 1) == r[4] })
          res_level = 6 if(res_level == 1)
          mut_list << [r[4], aas + ['ins']]
        end
      end


      #Resistance Likely
      @@rules.find_all() {|a| a[0] == region and a[1] == drug[:code] and a[2] == geno  and a[3] == 5}.each do |r|
        aas = aa_seq[r[4] - 1]
        aas = [] if(aas == nil)
        if(aas.any?(){|aa| r[5].include?(aa) })
          res_level = 5 if(res_level == 1)
          mut_list << [r[4], aas]
        elsif(r[5].include?('i') and inserts.find(){|a| (a[0] + 1) == r[4] })
          res_level = 5 if(res_level == 1)
          mut_list << [r[4], aas + ['ins']]
        end
      end


      #Resistance Likely(if you find two of em) or Resistance Possible if only one.
      o_cnt = 0
      @@rules.find_all() {|a| a[0] == region and a[1] == drug[:code] and a[2] == geno  and a[3] == 4}.each do |r|
        aas = aa_seq[r[4] - 1]
        aas = [] if(aas == nil)
        if(aas.any?(){|aa| r[5].include?(aa) })
          o_cnt += 1
          if(res_level == 1)
            res_level = 4 #resistance Possible
            res_level = 5 if(o_cnt >= 2) #resistance likely
          end
          mut_list << [r[4], aas]
        elsif(r[5].include?('i') and inserts.find(){|a| (a[0] + 1) == r[4] })
          o_cnt += 1
          if(res_level == 1)
            res_level = 4 #resistance Possible
            res_level = 5 if(o_cnt >= 2) #resistance likely
          end
          mut_list << [r[4], aas + ['ins']]
        end
      end


      #Mutations Detected, effect Unknown.
      #Triggers if the genotype has known mutations at this location for this drug AND the call isn't wild AND the mutation isn't in the list.
      @@rules.find_all() {|a| a[0] == region and a[1] == drug[:code] and a[2] == geno }.map(){|a| a[4]}.uniq.each do |loc| #Just take the location.
        #Get all the known mutant aminos
        mutaas = []
        @@rules.find_all() {|a| a[0] == region and a[1] == drug[:code] and a[2] == geno and a[4] == loc }.each do |r|
          mutaas += r[5]
        end
        mutaas.uniq!()

        #Get the wildtype
        wildaa = translate(@@standards[[region, geno]][(loc - 1) * 3, 3] )
        wildaa = wildaa.join('') if(wildaa.kind_of?(Array))

        #If there are any amino acids left after subtracting the wildtype and mutations, then we can call it.
        aas = aa_seq[loc - 1]
        aas = [] if(aas == nil)
        aasx = aas.clone()
        aasx -= [wildaa]
        aasx -= mutaas
        if(aasx.size() > 0)
          res_level = 3 if(res_level == 1) #resistance Possible
          mut_list << [loc, aas]
        end
      end


      #No data available
      if(res_level == 1)
        if(@@rules.find_all() {|a| a[0] == region and a[1] == drug[:code] and a[2] == geno }.size() == 0)
          res_level = 2
        end
      end

      #Kickass, now we record the data.
      res = drug.clone()
      res[:level] = res_level
      res[:interp] = @@res_hash[res_level][0]
      res[:color] = @@res_hash[res_level][1]
      result['drugs'] << res
    end #end drug loop

    #replace wildtype aminoss with 'wt'
    mut_list.each do |mut|
      wildaa = translate(@@standards[[region, geno]][(mut[0] - 1) * 3, 3] )
      wildaa = wildaa.join('') if(wildaa.kind_of?(Array))
      mut[1].each do |aa|
        aa.gsub!(wildaa, 'wt') if(aa == wildaa)
      end
      mut[1].sort!(){|a,b| a == 'wt' ? -1 : (b == 'wt' ? 1 : (a<=>b))}
    end

    #Now a bit of cleanup and we can return it.
    result['mutations'] = mut_list.uniq.sort() {|a,b| a[0]<=>b[0] }
    result['alg_version'] = @@version
    result['region'] = region
    result['geno'] = geno
    #result['aa_seq'] = aa_seq

    return result
  end

  #Describes the rules for a particular drug/genotype
  def describe(drugcode, geno)
    drug = @@drugs.find(){|d| d[:code] == drugcode}
    return "No algorithm for #{drugcode}" if(drug == nil)
    description = "Algorithm of #{drug[:name]} for genotype #{geno}:\n\n"

    rules6 = @@rules.find_all() {|a| a[0] == drug[:class] and a[1] == drug[:code] and a[2] == geno and a[3] == 6}
    rules5 = @@rules.find_all() {|a| a[0] == drug[:class] and a[1] == drug[:code] and a[2] == geno and a[3] == 5}
    rules4 = @@rules.find_all() {|a| a[0] == drug[:class] and a[1] == drug[:code] and a[2] == geno and a[3] == 4}
    rules3 = @@rules.find_all() {|a| a[0] == drug[:class] and a[1] == drug[:code] and a[2] == geno }
    rules1 = @@rules.find_all() {|a| a[0] == drug[:class] and a[1] == drug[:code] and a[2] == geno and a[3] == 1 }

    if(rules6.size() > 0)
      description += "Interpretation will be \"#{@@res_hash[6][0]}\"(#{@@res_hash[6][1].to_s}) if any of the following mutations appear:\n"
      description += "  " + rules6.map{|r| "#{r[4]}#{r[5].join('')}" }.join(', ') + "\n"
    end

    if(rules5.size() > 0)
      description += "Interpretation will be \"#{@@res_hash[5][0]}\"(#{@@res_hash[5][1].to_s}) if any of the following mutations appear:\n"
      description += "  " + rules5.map{|r| "#{r[4]}#{r[5].join('')}" }.join(', ') + "\n"
    end

    if(rules4.size() > 0)
      description += "Interpretation will be \"#{@@res_hash[5][0]}\"(#{@@res_hash[5][1].to_s}) if two or more of the following mutations appear, or #{@@res_hash[4][0]}(#{@@res_hash[4][1].to_s}) if only one appears:\n"
      description += "  " + rules4.map{|r| "#{r[4]}#{r[5].join('')}" }.join(', ') + "\n"
    end

    if(rules3.size() > 0)
      description += "Interpretation will be \"#{@@res_hash[3][0]}\"(#{@@res_hash[3][1].to_s}) if any other mutation at the following positions:\n"
      description += "  " + rules3.map{|r| r[4] }.uniq.sort.map(){|loc| loc.to_s }.join(', ') + "\n"
      if(rules1.size() > 0)
        description += "  Except for " +  rules1.map{|r| "#{r[4]}#{r[5].join('')}" }.join(', ') + "\n"
      end
    end

    if(rules3.size() == 0)
      description += "Interpretation will be \"#{@@res_hash[2][0]}\"\n"
    else
      description += "Otherwise, the interpretation will be \"#{@@res_hash[1][0]}\"(#{@@res_hash[1][1].to_s})\n"
    end

    return description
  end

  def describe_html()
    html = "<html><head><title>CFE HCV Algorithm version #{@@version}</title></head><body><center><h2>CFE HCV Algorithm version #{@@version} - #{@@date}</h2><div style='font-size:14;font-family:arial;'><br/>Rules are applied in the order they appear."

    ['NS3','NS5A','NS5B'].each do |region|
      html += "<table border='3' cellpadding='5' cellspacing='0' width='800'><tr><th colspan='2'><font size='+2'>#{region}</font></th></tr>"
      @@drugs.find_all(){|a| a[:class] == region}.sort(){|a,b| a[:name] <=> b[:name] }.each do |drug|

        @@genotypes.each do |geno|
          html += "<tr><th colspan='2'>#{drug[:name]}  -  Genotype #{geno}</th></tr>"

          rules6 = @@rules.find_all() {|a| a[0] == drug[:class] and a[1] == drug[:code] and a[2] == geno and a[3] == 6}
          rules5 = @@rules.find_all() {|a| a[0] == drug[:class] and a[1] == drug[:code] and a[2] == geno and a[3] == 5}
          rules4 = @@rules.find_all() {|a| a[0] == drug[:class] and a[1] == drug[:code] and a[2] == geno and a[3] == 4}
          rules3 = @@rules.find_all() {|a| a[0] == drug[:class] and a[1] == drug[:code] and a[2] == geno }
          rules1 = @@rules.find_all() {|a| a[0] == drug[:class] and a[1] == drug[:code] and a[2] == geno and a[3] == 1 }

          if(rules6.size() > 0)
            html += "<tr><td>Interpretation will be \"<span style='color:#{@@res_hash[6][1].to_s};font-weight:bold;'>#{@@res_hash[6][0]}</span>\" if any of the following mutations appear:</td>"
            html += "<td>" + rules6.map{|r| "#{r[4]}#{r[5].join('')}" }.join(', ') + "</td></tr>"
          end

          if(rules5.size() > 0)
            html += "<tr><td>Interpretation will be \"<span style='color:#{@@res_hash[5][1].to_s};font-weight:bold;'>#{@@res_hash[5][0]}</span>\" if any of the following mutations appear:</td>"
            html += "<td>" + rules5.map{|r| "#{r[4]}#{r[5].join('')}" }.join(', ') + "</td></tr>"
          end

          if(rules4.size() > 0)
            html += "<tr><td>Interpretation will be \"<span style='color:#{@@res_hash[5][1].to_s};font-weight:bold;'>#{@@res_hash[5][0]}</span>\" if two or more of the following mutations appear, or \"<span style='color:#{@@res_hash[4][1].to_s};font-weight:bold;'>#{@@res_hash[4][0]}</span>\" if only one appears:</td>"
            html += "<td>" + rules4.map{|r| "#{r[4]}#{r[5].join('')}" }.join(', ') + "</td></tr>"
          end

          if(rules3.size() > 0)
            html += "<tr><td>Interpretation will be \"<span style='color:#{@@res_hash[3][1].to_s};font-weight:bold;'>#{@@res_hash[3][0]}</span>\" if any other mutation at the following positions:</td>"
            html += "<td>" + rules3.map{|r| r[4] }.uniq.sort.map(){|loc| loc.to_s }.join(', ') + "  "
            if(rules1.size() > 0)
              html += "<br/><b>Except for </b>" +  rules1.map{|r| "#{r[4]}#{r[5].join('')}" }.join(', ') + "</td></tr>"
            end
          end

          if(rules3.size() == 0)
            html += "<tr><td colspan='2'>Interpretation will be \"<span style='color:#{@@res_hash[2][1].to_s};font-weight:bold;'>#{@@res_hash[2][0]}</span>\"</td>"
          else
            html += "<tr><td colspan='2'>Otherwise, the interpretation will be \"<span style='color:#{@@res_hash[1][1].to_s};font-weight:bold;'>#{@@res_hash[1][0]}</span>\"</td>"
          end

        end
        html += "<tr><th colspan='2'>&nbsp;</th></tr>"
      end
      html += "</table>"
    end
    html += "<br/><b>References</b>:<br/>"
    @@references.each do |reference|
      html += "#{reference}<br/><br/>"
    end

    html += "</div></center></body></html>"

    return html
  end


end

#testing
if( __FILE__ == $0)
  require 'pp' #pretty print
  hcv_alg = HCVAlgorithm.new()
  seqa = 'GCTCCCATCTCGGCCTACGCCCAACAGACGCGRGGTCTGCTCGGTTGCATCATCACCAGCCTCACAGGCCGGGACAAGAACCAGGTCGAGGGGGAGGTCCAGGTGGTTTCTACCGCGACACAATCCTTTCTGGCGACCTGCATCAACGGCGTGTGTTGGACCGTCTTCCATGGCGCTGGCTCGAAGACCCTAGCCGGCCCAAAAGGCCCGATCACCCAAATGTACACCAATGTGGACCAGGACCTCGTCGGCTGGCAGGCGCCCCCTGGGGCGCGTTCCATGACGCCATGCACCTGCGGCAGCTCGGACCTCTACTTGGTCACGAGGCACGCYGATGTCATCCCGGTGCGCCGGCGGGGAGACAGTAGGGGCAGCCTACTCTCCCCCAGGCCTGTCTCCTACTTGAAGGGCTCCTCGGGTGGCCCACTGCTCTGCCCCTCGGGGCACGCTGTGGGTATTTTCCGGGCCGCTGTGTGTACTCGGGGGGTTGCGAAGGCGGTGGACTTTATACCCGTCGAGTCTATGGAAACTACTATGCGGTCCCCGGTATTCACGGACAATTCATCTCCCCCGGCCGTACCGCAGGCATTCCAAGTGGCCCATCTACACGCTCCCACTGGCAGCGGTAAGAGCACCAAGGTGCCGGCTGCATATGCAGCCCAAGGGTACAAGGTACTCGTCTTGAACCCGTCCGTTGCCGCCACCTTAGGTTTTGGGGCGTATATGTCTAAGGCACATGGTGTCGACCCTAACATCAGAACTGGGGTAAGGACCATCACCACGGGCGCCCCTATCACATACTCCACCTAT'
  seqb = 'GCGCCCATCACGGCGTACGCTCAGCAGACAAGGGGGCTCTTGGGGTGCATAATTACCAGCTTGACCGGCCGGGACAAAAACCAGGTGGAGGGTGAGGTTCAGATCGTGTCAACTGCTGGCCAGACTTTCCTGGCAACCTGCATCAATGGGGTGTGCTGGACTGTCTACCACGGGGCCGGATCAAGGACCCTCGCGTCACCCAAGGGTCCCGTCATCCAGATGTACACCAATGTAGACCAAGACCTCGTAGGCTGGCCCGCCCCTCAAGGTGCGCGCTCATTGACGCCCTGCACTTGCGGCTCCTCGGACCTTTACCTGGTCACGAGGCACGCCGATGTCATTCCCGTACGCCGGCGGGGTGACAGCAGGGGCAGCCTGCTCTCGCCCCGGCCTATCTCTTACTTGAAGGGCTCCTCGGGGGGCCCACTGCTGTGCCCCGCGGGACACGCCGTAGGCATATTCAGGGCCGCGGTGTGTACCCGTGGAGTGGCCAAAGCGGTGGAATTTGTCCCCGTAGAGAGCCTGGAAACAACCATGAGGTCCCCGGTGTTCACAGACAACTCCTCACCACCAGCAGTGCCTCAGAGCTTCCAGGTGGCCCACCTGCATGCTCCCACCGGCAGCGGCAAGAGCACCAAGGTCCCGGCCGCATACGCGGATCAGGGCTACAAGGTGCTGGTGCTCAACCCCTCCGTTGCCGCAACACTGGGCTTTGGCGCCTACATGTCTAAGGCCCACGGGATTGACCCCAATATCAGGACTGGGGTGCGGACAATCACTACTGGCAGCCCCATCACATACTCCACCTACGGCAAGTTCCTCGCTGACGGCGGGTGTTCGGGGGGTGCTTATGACATAATAATTTGTGATGAGTGCCACTCCACGGATGCAACATCCATTTTGGGCATCGGCACTGTCCTTGACCAAGCAGAGACTGCGGGGGCGAGGCTGGTTGTGCTCGCCACCGCCACTCCTCCAGGCTCCGTCACTGTGCCCCATCCTAACATCGAGGAGGTTGCTCTGTCCACCACCGGAGAGATCCCCTTTTACGGCAAGGCTATCCCTCTTGCGGCAATCAAGGGGGGGAGGCATCTCATTTTCTGCCACTCAAAGAAGAAGTGCGACGAGCTCGCCGCGAAACTGGTCGCGCTGGGCGTCAACGCCGTGGCTTACTACCGCGGCCTAGACGTGTCCGTCATCCCGACCAGTGGCGACGTTGTCGTCGTGGCAACTGATGCCCTCATGACCGGCTATACCGGCGACTTCGACTCGGTGATAGATTGCAATACATGTGTCACTCAGACAGTCGACTTCAGCCTTGACCCTACCTTCACCATTGAGACAACCACGCTCCCTCAGGACGCCGTCTCCCGCACTCAACGCCGGGGTAGGACTGGCAGGGGGAAGCCAGGCATCTACAGATATGTGGCACCAGGAGAGCGCCCTTCTGGCATGTTTGACTCGTCTGTCCTCTGTGAGTGCTATGACGCAGGCTGCGCTTGGTATGAGCTCACACCTGCCGAGACCACAGTTAGGCTACGAGCATACATGAACACCCCGGGGCTCCCTGTATGCCAAGACCATCTTGAATTTTGGGAGGGCGTCTTCACGGGCCTCACCCATATAGATGCCCATTTCCTATCTCAGACAAAGCAGAGTGGGGAAAACCTTCCTTACCTGGTAGCGTACCAAGCCACCGTGTGCGCTAGAGCTCAAGCTCCCCCCCCATCGTGGGACCAGATGTGGAAGTGCTTGATCCGCCTCAAGCCCACCCTTCATGGGCCAACGCCTCTGCTATACAGACTGGGTGCTGTCCAGAACGAAACCACCCTGACGCACCCAATCACCAAGTACATCATGACATGCATGTCGGCTGACCTGGAGGTCGTCACG'

  #pp hcv_alg.interpret(seqa, 'NS3', '1A', [1,'ttt'])
  pp hcv_alg.interpret(seqa, 'NS3', '1A', nil)
#  pp hcv_alg.interpret(seqb, 'NS3', '1A', nil)


  #puts hcv_alg.describe('BPV','1A')
  HCVAlgorithm.drugs.each do |drug|
    HCVAlgorithm.genotypes.each do |geno|
      puts hcv_alg.describe(drug[:code], geno)
      puts
    end
  end

end
